{"version":3,"sources":["components/Card.js","components/CustomImage.js","components/TopIcons.js","components/ProfileButton.js","components/TutorialOverlay.js","components/Sidebar.js","hooks/Typewriter.js","components/QuestionAnswer.js","components/MainContent.js","components/Education.js","components/Skills.js","components/WorkExperience.js","components/Entre.js","components/ExtraCurriculars.js","components/Projects.js","components/Links.js","App.js","index.js"],"names":["Card","_ref","children","style","_jsx","top","left","width","height","backgroundColor","borderRadius","display","flexDirection","padding","boxSizing","transition","styles","backgroundPosition","backgroundSize","backgroundRepeat","defaultProps","CustomImage","props","_props$image","backgroundImage","concat","image","iconContainer","justifyContent","imageContainer","cursor","icons","id","url","TopIcons","onToggleCollapse","collapsed","onClick","fontSize","fontFamily","lineHeight","fontWeight","marginBottom","alignItems","color","ProfileButton","text","active","buttonStyle","className","TutorialOverlay","onDismiss","highlights","setHighlights","useState","useEffect","highlightConfigs","selector","calculateHighlights","newHighlights","map","_ref2","element","document","querySelector","rect","getBoundingClientRect","window","scrollY","scrollX","filter","highlight","addEventListener","removeEventListener","index","Sidebar","setCollapsed","showTutorial","setShowTutorial","location","useLocation","_jsxs","handleToggle","console","log","marginTop","marginLeft","Link","to","pathname","margin","handleDismissTutorial","useTypewriter","onComplete","displayedText","setDisplayedText","currentIndex","intervalId","setInterval","length","prev","clearInterval","QuestionAnswer","question","answer","handleTypewriterComplete","useCallback","answerText","Button","border","outline","SelectedButton","isSelected","label","MainContent","chatHistory","setChatHistory","showOptions","setShowOptions","isAnswering","setIsAnswering","activeQuestion","setActiveQuestion","initialMessage","options","responses","dangerouslySetInnerHTML","__html","replace","chat","src","alt","option","prevHistory","setTimeout","handleButtonClick","Education","Skills","WorkExperienceContent","Entre","ExtraCurricular","Projects","Links","App","Router","Routes","Route","path","WorkExperience","Entrepreneurship","ExtraCurriculars","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.d1b51d73.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ children, style }) => {\r\n  const defaultStyles = {\r\n    top: '0px',\r\n    left: '0px',\r\n    width: '237px', // Default width\r\n    height: '100vh',\r\n    backgroundColor: '#171717',\r\n    borderRadius: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    transition: 'width 0.3s, padding 0.3s', // Ensure a smooth transition\r\n  };\r\n\r\n  return <div style={{ ...defaultStyles, ...style }}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  ImageContainer: {\r\n    width: '55px',\r\n    height: '55px',\r\n    borderRadius: '9999px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n};\r\n\r\nconst defaultProps = {\r\n  image: 'https://assets.api.uizard.io/api/cdn/stream/e2ffbe9b-2685-41ae-9a7e-73844efcce87.png',\r\n};\r\n\r\nconst CustomImage = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.ImageContainer,\r\n        backgroundImage: `url(${props.image ?? defaultProps.image})`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomImage;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  iconContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '20px',\r\n  },\r\n  imageContainer: {\r\n    width: '24px',\r\n    height: '24px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst icons = [\r\n  { id: 1, url: 'https://assets.api.uizard.io/api/cdn/stream/d623031a-d918-41d4-9fb3-2ac91c3d5ac0.png' },\r\n  \r\n];\r\n\r\nconst TopIcons = ({ onToggleCollapse, collapsed }) => {\r\n  return (\r\n    <div style={styles.iconContainer}>\r\n      <div\r\n        style={{\r\n          ...styles.imageContainer,\r\n          backgroundImage: `url(${icons[0].url})`,\r\n        }}\r\n        onClick={onToggleCollapse}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopIcons;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  button: {\r\n    fontSize: '20px',\r\n    fontFamily: 'Roboto, sans-serif',\r\n    lineHeight: '26px',\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    fontWeight: 400, // Regular font weight\r\n    marginBottom: '10px', // Add margin for spacing\r\n    alignItems: 'left',\r\n  },\r\n  activeButton: {\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#000000',\r\n    borderRadius: '5px',\r\n    alignItems: 'left',\r\n  },\r\n  inactiveButton: {\r\n    backgroundColor: 'transparent',\r\n    color: '#FFFFFF',\r\n  },\r\n};\r\n\r\nconst ProfileButton = ({ text = 'Profile', active = false, collapsed = false }) => {\r\n  const buttonStyle = active\r\n    ? { ...styles.button, ...styles.activeButton }\r\n    : { ...styles.button, ...styles.inactiveButton };\r\n\r\n  return (\r\n    <div style={buttonStyle} className={`profile-button ${collapsed ? 'collapsed' : ''}`}>\r\n      <span>{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './TutorialOverlay.css';\r\n\r\nconst TutorialOverlay = ({ onDismiss }) => {\r\n  const [highlights, setHighlights] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const highlightConfigs = [\r\n      { selector: '.top-left-icon', text: 'Click here to collapse the sidebar.' }, // Ensure the correct selector\r\n  \r\n      { selector: '.previous-conversations', text: 'Explore other parts of my resume' },\r\n    ];\r\n\r\n    const calculateHighlights = () => {\r\n      const newHighlights = highlightConfigs.map(({ selector, text }) => {\r\n        const element = document.querySelector(selector);\r\n        if (element) {\r\n          const rect = element.getBoundingClientRect();\r\n          return {\r\n            text,\r\n            top: rect.top + window.scrollY,\r\n            left: rect.left + window.scrollX,\r\n            width: rect.width,\r\n            height: rect.height,\r\n          };\r\n        }\r\n        return null;\r\n      }).filter(highlight => highlight !== null);\r\n\r\n      setHighlights(newHighlights);\r\n    };\r\n\r\n    calculateHighlights();\r\n    window.addEventListener('resize', calculateHighlights);\r\n    return () => window.removeEventListener('resize', calculateHighlights);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tutorial-overlay\" onClick={onDismiss}>\r\n      {highlights.map((highlight, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"highlight\"\r\n          style={{\r\n            top: `${highlight.top}px`,\r\n            left: `${highlight.left}px`,\r\n            width: `${highlight.width}px`,\r\n            height: `${highlight.height}px`,\r\n          }}\r\n        >\r\n          <div className=\"highlight-text\" style={{ top: `${highlight.height + 10}px` }}>\r\n            {highlight.text}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialOverlay;\r\n","import React, { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Card from './Card';\r\nimport CustomImage from './CustomImage';\r\nimport TopIcons from './TopIcons';\r\nimport ProfileButton from './ProfileButton';\r\nimport TutorialOverlay from './TutorialOverlay'; // Import the TutorialOverlay\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [showTutorial, setShowTutorial] = useState(true); // State to control tutorial visibility\r\n  const location = useLocation();\r\n\r\n  const handleToggle = () => {\r\n    setCollapsed(!collapsed);\r\n    console.log('Sidebar collapsed:', !collapsed);\r\n  };\r\n\r\n  const collapsedStyles = {\r\n    width: '160px',\r\n    padding: '10px',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  const handleDismissTutorial = () => {\r\n    setShowTutorial(false);\r\n  };\r\n\r\n  return (\r\n    <Card style={collapsed ? collapsedStyles : {}}>\r\n      <div className=\"top-left-icon\" onClick={handleToggle}>\r\n        <TopIcons collapsed={collapsed} />\r\n      </div>\r\n      <div style={{ marginTop: '20px', marginBottom: '30px' }}>\r\n        <div style={{ display: 'flex', alignItems: 'center' }} className=\"profile-button\">\r\n          <CustomImage />\r\n          {!collapsed && <span style={{ marginLeft: '10px', color: '#ffffff' }}>Sam's GPT</span>}\r\n        </div>\r\n      </div>\r\n      <Link to=\"/profile\">\r\n        <ProfileButton\r\n          text=\"Profile\"\r\n          active={location.pathname === '/profile'}\r\n          collapsed={collapsed}\r\n          className=\"profile-button\"\r\n        />\r\n      </Link>\r\n      <div style={{ marginTop: '20px', color: '#b4b4b4' }} className=\"previous-conversations\">\r\n        {!collapsed && <span>Previous Conversations</span>}\r\n      </div>\r\n      {!collapsed && (\r\n        <div style={{ backgroundColor: '#ffffff', height: '2px', width: '100%', margin: '10px 0' }}></div>\r\n      )}\r\n      <Link to=\"/education\">\r\n        <ProfileButton\r\n          text=\"Education\"\r\n          active={location.pathname === '/education'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/skills\">\r\n        <ProfileButton\r\n          text=\"Skills\"\r\n          active={location.pathname === '/skills'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/work-experience\">\r\n        <ProfileButton\r\n          text=\"Work Experience\"\r\n          active={location.pathname === '/work-experience'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/entrepreneurship\">\r\n        <ProfileButton\r\n          text=\"Entrepreneurship\"\r\n          active={location.pathname === '/entrepreneurship'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/extra-curriculars\">\r\n        <ProfileButton\r\n          text=\"Extra Curriculars\"\r\n          active={location.pathname === '/extra-curriculars'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/projects\">\r\n        <ProfileButton\r\n          text=\"Projects\"\r\n          active={location.pathname === '/projects'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/links\">\r\n        <ProfileButton\r\n          text=\"Links\"\r\n          active={location.pathname === '/links'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      {showTutorial && <TutorialOverlay onDismiss={handleDismissTutorial} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useTypewriter = (text, onComplete) => {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let currentIndex = 1;\r\n        const intervalId = setInterval(() => {\r\n            if (currentIndex < text.length-1) {\r\n                setDisplayedText((prev) => prev + text[currentIndex]);\r\n                currentIndex++;\r\n            } else {\r\n                clearInterval(intervalId);\r\n                if (onComplete) onComplete();\r\n            }\r\n        }, );\r\n        return () => clearInterval(intervalId);\r\n    }, [text, onComplete]);\r\n\r\n    return displayedText;\r\n};\r\n\r\nexport default useTypewriter;\r\n","import React, { useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\n\r\n// In QuestionAnswer.js\r\nconst QuestionAnswer = ({ question, answer, onComplete }) => {\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        if (onComplete) onComplete(); // Call the onComplete function if provided\r\n    }, [onComplete]);\r\n\r\n    const answerText = useTypewriter(answer, handleTypewriterComplete);\r\n\r\n    return (\r\n        <div className=\"message\">\r\n            <CustomImage />\r\n            <div className=\"message-content\">\r\n                <p>{answerText}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionAnswer;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst MainContent = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   Hi! Thanks for stopping by :) I'm Samika and this is Sam's GPT trained on my resume and personality.\r\n\r\n- I am a senior pursuing a bachelors in Computer Science at the University of Pittsburgh (Dean's List '24 and '23)\r\n\r\n- International student from India in the USA on an F1 visa :)\r\n\r\n- 2x Founder and CEO with a deep rooted passion for making a tangible positive impact using technology\r\n\r\n- Part time chef for my entire friend group and a childhood interest in canvas paintings`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. \\n Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"need to add so tired rn\",\r\n        \"What is she like outside work?\": \"i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MainContent;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst Education = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"    need to add so tired rn\",\r\n        \"What is she like outside work?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst Skills = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"    need to add so tired rn\",\r\n        \"What is she like outside work?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst WorkExperienceContent = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her work experience. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika's work experience\",\r\n        \"What are her key projects?\",\r\n        \"What skills has she developed?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika's work experience\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What are her key projects?\": \"    need to add so tired rn\",\r\n        \"What skills has she developed?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default WorkExperienceContent;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst Entre = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"    need to add so tired rn\",\r\n        \"What is she like outside work?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Entre;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst ExtraCurricular = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"    need to add so tired rn\",\r\n        \"What is she like outside work?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ExtraCurricular;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst Projects = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"    need to add so tired rn\",\r\n        \"What is she like outside work?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst Links = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"    need to add so tired rn\",\r\n        \"What is she like outside work?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Links;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport MainContent from './components/MainContent';\nimport Education from './components/Education';\nimport Skills from './components/Skills';\nimport WorkExperience from './components/WorkExperience';\nimport Entrepreneurship from './components/Entre';\nimport ExtraCurriculars from './components/ExtraCurriculars';\nimport Projects from './components/Projects';\nimport Links from './components/Links';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Sidebar />\n        <Routes>\n          <Route path=\"/profile\" element={<MainContent />} />\n          <Route path=\"/education\" element={<Education />} />\n          <Route path=\"/skills\" element={<Skills />} />\n          <Route path=\"/work-experience\" element={<WorkExperience />} />\n          <Route path=\"/entrepreneurship\" element={<Entrepreneurship />} />\n          <Route path=\"/extra-curriculars\" element={<ExtraCurriculars />} />\n          <Route path=\"/projects\" element={<Projects />} />\n          <Route path=\"/links\" element={<Links />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}