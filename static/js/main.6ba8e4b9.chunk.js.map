{"version":3,"sources":["components/Card.js","components/CustomImage.js","components/TopIcons.js","components/ProfileButton.js","components/TutorialOverlay.js","components/Sidebar.js","hooks/Typewriter.js","components/QuestionAnswer.js","components/MainContent.js","components/Education.js","components/Skills.js","components/WorkExperience.js","components/Entre.js","components/ExtraCurriculars.js","components/Projects.js","components/Links.js","App.js","index.js"],"names":["Card","_ref","children","style","_jsx","top","left","width","height","backgroundColor","borderRadius","display","flexDirection","padding","boxSizing","transition","styles","backgroundPosition","backgroundSize","backgroundRepeat","defaultProps","CustomImage","props","_props$image","backgroundImage","concat","image","iconContainer","justifyContent","imageContainer","cursor","icons","id","url","TopIcons","onToggleCollapse","collapsed","onClick","fontSize","fontFamily","lineHeight","fontWeight","marginBottom","alignItems","color","ProfileButton","text","active","buttonStyle","className","TutorialOverlay","onDismiss","highlights","setHighlights","useState","useEffect","highlightConfigs","selector","calculateHighlights","newHighlights","map","_ref2","element","document","querySelector","rect","getBoundingClientRect","window","scrollY","scrollX","filter","highlight","addEventListener","removeEventListener","index","Sidebar","setCollapsed","showTutorial","setShowTutorial","location","useLocation","_jsxs","handleToggle","console","log","marginTop","marginLeft","Link","to","pathname","margin","handleDismissTutorial","useTypewriter","onComplete","displayedText","setDisplayedText","currentIndex","innerWidth","intervalId","setInterval","length","prev","clearInterval","QuestionAnswer","question","answer","handleTypewriterComplete","useCallback","answerText","dangerouslySetInnerHTML","__html","replace","Button","border","outline","SelectedButton","isSelected","label","MainContent","chatHistory","setChatHistory","showOptions","setShowOptions","isAnswering","setIsAnswering","activeQuestion","setActiveQuestion","initialMessage","currentResponse","setCurrentResponse","remainingOptions","setRemainingOptions","responses","chat","src","alt","option","prevHistory","prevOptions","opt","setTimeout","handleButtonClick","Education","Skills","WorkExperience","Entre","options","ExtraCurricular","Projects","Links","App","Router","Routes","Route","path","Entrepreneurship","ExtraCurriculars","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.6ba8e4b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ children, style }) => {\r\n  const defaultStyles = {\r\n    top: '0px',\r\n    left: '0px',\r\n    width: '237px', // Default width\r\n    height: '100vh',\r\n    backgroundColor: '#171717',\r\n    borderRadius: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    transition: 'width 0.3s, padding 0.3s', // Ensure a smooth transition\r\n  };\r\n\r\n  return <div style={{ ...defaultStyles, ...style }}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  ImageContainer: {\r\n    width: '55px',\r\n    height: '55px',\r\n    borderRadius: '9999px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n};\r\n\r\nconst defaultProps = {\r\n  image: 'https://assets.api.uizard.io/api/cdn/stream/e2ffbe9b-2685-41ae-9a7e-73844efcce87.png',\r\n};\r\n\r\nconst CustomImage = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.ImageContainer,\r\n        backgroundImage: `url(${props.image ?? defaultProps.image})`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomImage;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  iconContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '20px',\r\n  },\r\n  imageContainer: {\r\n    width: '24px',\r\n    height: '24px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst icons = [\r\n  { id: 1, url: 'https://assets.api.uizard.io/api/cdn/stream/d623031a-d918-41d4-9fb3-2ac91c3d5ac0.png' },\r\n  \r\n];\r\n\r\nconst TopIcons = ({ onToggleCollapse, collapsed }) => {\r\n  return (\r\n    <div style={styles.iconContainer}>\r\n      <div\r\n        style={{\r\n          ...styles.imageContainer,\r\n          backgroundImage: `url(${icons[0].url})`,\r\n        }}\r\n        onClick={onToggleCollapse}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopIcons;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  button: {\r\n    fontSize: '20px',\r\n    fontFamily: 'Roboto, sans-serif',\r\n    lineHeight: '26px',\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    fontWeight: 400, // Regular font weight\r\n    marginBottom: '10px', // Add margin for spacing\r\n    alignItems: 'left',\r\n  },\r\n  activeButton: {\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#000000',\r\n    borderRadius: '5px',\r\n    alignItems: 'left',\r\n  },\r\n  inactiveButton: {\r\n    backgroundColor: 'transparent',\r\n    color: '#FFFFFF',\r\n  },\r\n};\r\n\r\nconst ProfileButton = ({ text = 'Profile', active = false, collapsed = false }) => {\r\n  const buttonStyle = active\r\n    ? { ...styles.button, ...styles.activeButton }\r\n    : { ...styles.button, ...styles.inactiveButton };\r\n\r\n  return (\r\n    <div style={buttonStyle} className={`profile-button ${collapsed ? 'collapsed' : ''}`}>\r\n      <span>{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './TutorialOverlay.css';\r\n\r\nconst TutorialOverlay = ({ onDismiss }) => {\r\n  const [highlights, setHighlights] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const highlightConfigs = [\r\n      { selector: '.top-left-icon', text: 'Click here to collapse the sidebar.' }, // Ensure the correct selector\r\n  \r\n      { selector: '.previous-conversations', text: 'Explore other parts of my resume' },\r\n    ];\r\n\r\n    const calculateHighlights = () => {\r\n      const newHighlights = highlightConfigs.map(({ selector, text }) => {\r\n        const element = document.querySelector(selector);\r\n        if (element) {\r\n          const rect = element.getBoundingClientRect();\r\n          return {\r\n            text,\r\n            top: rect.top + window.scrollY,\r\n            left: rect.left + window.scrollX,\r\n            width: rect.width,\r\n            height: rect.height,\r\n          };\r\n        }\r\n        return null;\r\n      }).filter(highlight => highlight !== null);\r\n\r\n      setHighlights(newHighlights);\r\n    };\r\n\r\n    calculateHighlights();\r\n    window.addEventListener('resize', calculateHighlights);\r\n    return () => window.removeEventListener('resize', calculateHighlights);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tutorial-overlay\" onClick={onDismiss}>\r\n      {highlights.map((highlight, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"highlight\"\r\n          style={{\r\n            top: `${highlight.top}px`,\r\n            left: `${highlight.left}px`,\r\n            width: `${highlight.width}px`,\r\n            height: `${highlight.height}px`,\r\n          }}\r\n        >\r\n          <div className=\"highlight-text\" style={{ top: `${highlight.height + 10}px` }}>\r\n            {highlight.text}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialOverlay;\r\n","import React, { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Card from './Card';\r\nimport CustomImage from './CustomImage';\r\nimport TopIcons from './TopIcons';\r\nimport ProfileButton from './ProfileButton';\r\nimport TutorialOverlay from './TutorialOverlay'; // Import the TutorialOverlay\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [showTutorial, setShowTutorial] = useState(true); // State to control tutorial visibility\r\n  const location = useLocation();\r\n\r\n  const handleToggle = () => {\r\n    setCollapsed(!collapsed);\r\n    console.log('Sidebar collapsed:', !collapsed);\r\n  };\r\n\r\n  const collapsedStyles = {\r\n    width: '70px',\r\n    padding: '10px',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  const handleDismissTutorial = () => {\r\n    setShowTutorial(false);\r\n  };\r\n\r\n  return (\r\n    <Card style={collapsed ? collapsedStyles : {}}>\r\n      <div className=\"top-left-icon\" onClick={handleToggle}>\r\n        <TopIcons collapsed={collapsed} />\r\n      </div>\r\n      <div style={{ marginTop: '20px', marginBottom: '30px' }}>\r\n        <div style={{ display: 'flex', alignItems: 'center' }} className=\"profile-button\">\r\n          <CustomImage />\r\n          {!collapsed && <span style={{ marginLeft: '10px', color: '#ffffff' }}>Sam's GPT</span>}\r\n        </div>\r\n      </div>\r\n      <Link to=\"/profile\">\r\n        <ProfileButton\r\n          text=\"Profile\"\r\n          active={location.pathname === '/profile'}\r\n          collapsed={collapsed}\r\n          className=\"profile-button\"\r\n        />\r\n      </Link>\r\n      <div style={{ marginTop: '20px', color: '#b4b4b4' }} className=\"previous-conversations\">\r\n        {!collapsed && <span>Previous Conversations</span>}\r\n      </div>\r\n      {!collapsed && (\r\n        <div style={{ backgroundColor: '#ffffff', height: '2px', width: '100%', margin: '10px 0' }}></div>\r\n      )}\r\n      <Link to=\"/education\">\r\n        <ProfileButton\r\n          text=\"Education\"\r\n          active={location.pathname === '/education'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/skills\">\r\n        <ProfileButton\r\n          text=\"Skills\"\r\n          active={location.pathname === '/skills'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/work-experience\">\r\n        <ProfileButton\r\n          text=\"Work Experience\"\r\n          active={location.pathname === '/work-experience'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/entrepreneurship\">\r\n        <ProfileButton\r\n          text=\"Entrepreneurship\"\r\n          active={location.pathname === '/entrepreneurship'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/extra-curriculars\">\r\n        <ProfileButton\r\n          text=\"Extra Curriculars\"\r\n          active={location.pathname === '/extra-curriculars'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/projects\">\r\n        <ProfileButton\r\n          text=\"Projects\"\r\n          active={location.pathname === '/projects'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      <Link to=\"/links\">\r\n        <ProfileButton\r\n          text=\"Links\"\r\n          active={location.pathname === '/links'}\r\n          collapsed={collapsed}\r\n        />\r\n      </Link>\r\n      {showTutorial && <TutorialOverlay onDismiss={handleDismissTutorial} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useTypewriter = (text, onComplete) => {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let currentIndex = 0;\r\n        \r\n        // Detect if the user is on a mobile device based on screen width\r\n        const isMobile = window.innerWidth <= 600;\r\n        \r\n        // Set a faster speed for mobile devices\r\n        const speed = isMobile ? 4 : 4; // Adjust speed as needed, 50ms for mobile, 100ms for desktop\r\n\r\n        const intervalId = setInterval(() => {\r\n            if (currentIndex < text.length-1) {\r\n                setDisplayedText((prev) => prev + text[currentIndex]);\r\n                currentIndex++;\r\n            } else {\r\n                clearInterval(intervalId);\r\n                if (onComplete) onComplete();\r\n            }\r\n        }, speed);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [text, onComplete]);\r\n\r\n    return displayedText;\r\n};\r\n\r\nexport default useTypewriter;\r\n","import React, { useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\n\r\nconst QuestionAnswer = ({ question, answer, onComplete }) => {\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        if (onComplete) onComplete(); // Call the onComplete function if provided\r\n    }, [onComplete]);\r\n\r\n    const answerText = useTypewriter(answer, handleTypewriterComplete);\r\n\r\n    return (\r\n        <div className=\"message\">\r\n            <CustomImage />\r\n            <div className=\"message-content\">\r\n                <p dangerouslySetInnerHTML={{ __html: answerText.replace(/\\n/g, '<br />') }}></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionAnswer;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst MainContent = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   Hi! Thanks for stopping by :) I'm Samika, a senior at Pitt studying Computer Science. I built Sam's GPT to be an AI version of me to reflect my recent interest in AI/ML! A quick introduction:\r\n\r\n•  I graduate in 2025 with a degree in Computer Science at the <a href=\"https://www.pitt.edu/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">University of Pittsburgh</a> (Dean's List '24 and '23). I am also an international student from India in the USA on an F1 visa :)\r\n\r\n•  2x Founder with a deep rooted passion for making a tangible positive impact using technology\r\n\r\n•  I'm currently looking for full time roles in software/cloud engineering for 2025. \r\n\r\n•  Core skills: Java, Python, HTML/CSS, AWS (Lambda, EC2, EKS, S3), Git, Node.js, React, Docker, Kubernetes, etc. \r\n\r\n•  Previously worked as a Cloud DevOps Engineering Intern @ <a href=\"https://saviynt.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Saviynt</a>, Test Engineering Intern @ <a href=\"https://www.honeywell.com/us/en\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Honeywell</a> and currently serve as CEO of a SAAS company\r\n\r\n•  Part time chef for my entire friend group and oh i love cars <a href=\"https://www.porsche.com/international/models/911/911-gt3-rs/911-gt3-rs/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">(Porsche 911 GT3 RS</a> in particular)`, \r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n    \r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([ // State to keep track of remaining options\r\n        \"What's it like to work with Samika?\",\r\n        \"What are her hobbies?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ]);\r\n    \r\n\r\n    const responses = {\r\n        \"What's it like to work with Samika?\": `\"  <strong>#1 When I believe in an idea, I pursue it wholeheartedly.</strong>\r\n        \"The ones who are crazy enough to think they can change the world, are the ones who do\" - Steve Jobs\r\n        15 year old Samika took his words as gospel, literally. \r\n\r\n         • When I was 17, I created a cloud kitchen in my hometown, Pune. It was basically Uber eats on a smaller scale during Covid-19 but had a ROI of 175%. All the proceeds were donated to the <a href=\"https://prashanticancercare.org/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Prashanti Cancer Care Mission</a> (donate if you can!).\r\n         • In college, I've created and worked on more ideas than I can count, I've always been an entrepreneur at heart. I love exploring new tech, new places and new people hoping to learn and create something new. Something capable of helping people, making a positive impact and hopefully one day, capable of changing the world.\r\n\r\n        <strong>#2 Apart from my sense of humor, I also have a passion for making things more efficient.</strong>\r\n        •  At Saviynt, I pitched an idea I had to create in-house automations that would save 48min-1.2h/day for over 600 employees. The CEO approved of the POC, single coolest moment of my corporate life.\r\n        •  At Honeywell, I helped create the internal testing website to improve efficiency within the team. I also replaced the background with the Elmo on fire meme for a day, thereby making history in Pittsburgh's Honeywell office as the \"Elmo intern\". Shoutout to Maegan, Debby and the team! \r\n        •  In conclusion, what's productivity without a lil humor?\r\n        \r\n        <strong>#3 Great things are never done by one person.</strong>\r\n        •  Having led a team of 8 people at my startup, I learnt the fundamentals of leadership.\r\n        •  No matter how good one may be, we are nothing without our team.`,\r\n        \"What are her hobbies?\": `   Apart from coding the most random ideas at 3am I also enjoy:\r\n\r\n•  cooking (especially Thai food)\r\n\r\n•  painting, bowling, top golf \r\n\r\n•  volunteering at the animal shelter (let me know if you'd be interested as well!)\r\n\r\n•  examining car engines (especially v8 sport cars)\r\n\r\n•  rooting for Ferrari in Formula 1 races\r\n\r\n•  always trying to find problems that I could turn into the next million $ idea!`,\r\n        \"What is she like outside work?\": `   <strong>\"The key to success is happiness\"</strong>\r\n\r\nI make sure to take time to do things that keep me mentally calm and refreshed. This includes giving enough time to develop the ideas that I am passionate about, spending time with friends and family, taking a break to pet a cute dog, and doing spontaneous things with my friends!`,\r\n        \"I'm bored and I want to play a game\": `  Sure! Here's a few games you can play:\r\n        \r\n         •  <a href=\"https://www.chess.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Chess</a>\r\n         •  <a href=\"https://www.rockstargames.com/gta-v\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">GTA V</a> (we got Sam's AI version before GTA VI)\r\n         •  <a href=\"https://www.google.com/logos/2010/pacman10-i.html\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Pac-Man</a> (the OG) \r\n         •  <a href=\"http://slither.com/io\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Slither.io</a> (extremely addictive) \r\n         •  <a href=\"https://www.callofduty.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Call of Duty</a> (extremely addictive)\r\n         •  <a href=\"https://www.king.com/game/candycrush\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Candy Crush</a> (shoutout to my mom!)    `  \r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MainContent;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Education = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   I am currently a rising senior pursuing a bachelors of science in Computer Science at the University of Pittsburgh! I have been involved in a myriad of on-campus clubs (Women in CS, Panther Racing, CSC, Hall Council etc) \r\n        To expand my love for teaching, I was also an Undergraduate Teaching Assistant for CS0401 - Intermediate Programming & CS0445 - Data Structures and Algorithms in Java. \r\n\r\nCurrent GPA: 4:00\r\nCumulative GPA: 3.45\r\nDeans List '23 and '24\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n  \r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n    \r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"Relevant CS coursework\",\r\n        \"Where can I find a copy of her transcripts?\",\r\n    ]);\r\n\r\n    const responses = {\r\n        \"Relevant CS coursework\": `  1) CMPINF0010: Big Ideas in Computing and Information\r\n        2) CS0401: Intermediate Programming in Java (UTA)\r\n        2) CS0445: Data Structures and Algorithms 1 (UTA)\r\n        3) CS0441: Discrete Structures for CS\r\n        4) CS0447: Computer Organization and Assembly Language\r\n        5) CS0449: Intro to Systems Software\r\n        6) CMPINF1205: Comparative Digital Privacies\r\n        7) CS1501: Algorithms and Data Structures 2\r\n        8) CS1550: Operating Systems (IP)\r\n        9) CS1520: Programming Languages for Web Applications (IP)\r\n        10) CS1632: Software Quality Assurance (IP)`,\r\n        \"Where can I find a copy of her transcripts?\": `   You can email me at sps76@pitt.edu \r\n        You can also contact me on my phone +1 412-651-2512 ! `,\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Skills = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `    <strong>Programming Languages:</strong> \r\nJava, Python, HTML/CSS, JavaScript, C#, C\r\n\r\n<strong>AI/ML</strong>\r\nML Algorithms (linear regression, decision trees), NLPs (tokenization, Stemming, BoW), Data Processing (Pandas, NumPy), Data Pre-processing, ChatGPT API Integration \r\n\r\n <strong>Cloud:</strong> \r\nAWS: IAM, EC2, EKS, Lambda functions, S3, CloudShell, Assume Role Management, Docker, Kubernetes, Microservices, Serverless Architecture, Terraform\r\n\r\n<strong>FrontEnd: </strong> \r\nReact, Angular, Android, Vercel, Bootstrap, Sphinx, Test automation, Functional and Regression testing, Penetration testing\r\n\r\n<strong>Backend:</strong> \r\nFlask, S3, DynamoDB, MongoDB, Node.js, SignalR .NET, Firebase, express, MSSQL\r\n\r\n<strong>Tools: </strong> \r\nGit, RESTful API, Atlassian Toolset (JIRA, Bitbucket, Confluence), IAPs (Identity-Aware Proxies), Appium and Selenium, ROS (Robot Operating System), Agile Software Development Process, SourceTree\r\n\r\n<strong>IDE Software:</strong> \r\n Microsoft Visual Studio, Eclipse, Logisim, Arduino, IntelliJ\r\n\r\n Select an option below to know more about individual skillsets!\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"Programming Languages\",\r\n        \"AI/ML\",\r\n        \"Cloud\",\r\n        \"FrontEnd/Backend Experience\",\r\n        \"Tools\",\r\n    ]);\r\n\r\n    const responses = {\r\n        \"Programming Languages\": `   I've been coding for the past 5 years and have learnt a myriad of languages since. My years of experience in each: \r\n        \r\n        Java: 5+ years\r\n\r\n        Python: 3+ years\r\n        \r\n        HTML/CSS/JavaScript: 2+ years\r\n\r\n        C#: 1 year\r\n\r\n        C: 1 year`,\r\n        \"Cloud\": `    I have been working within the cloud for the past year with 3 months of concentrated experience working at Saviynt as a Cloud DevOps Intern. So far, I have:\r\n        \r\n        •  managed roll creation, access management and assumRole functionality on IAM\r\n\r\n        •  created Lambda functions to execute hands-free automation using APIs and external integrations\r\n\r\n        •  created lambda function for email security, 2FA and encryption of passwords on the cloud\r\n\r\n        •  programatically created, stored and accessed datasets in S3 buckets\r\n\r\n        •  created cloud cluster environments for customer access using EC2, EKS and Kubernetes\r\n\r\n        •  automated virtual session host creaton using EC2 `,\r\n        \"FrontEnd/Backend Experience\": `   Through my personal ventures, internship experiences and my role as founder in SAAS startups, I (tried to) learn the art of being a full stack developer! My projects with associated skills:\r\n        \r\n        <strong>FrontEnd:</strong>\r\n\r\n        Personal Website + other projects: React, HTML, CSS, JavaScript, Git\r\n\r\n        Test Engineering Intern at Honeywell: HTML/CSS, React\r\n\r\n        SAAS prototype: React, Flask, Vercel\r\n\r\n        Website Developer at YouthPlaces: WordPress, HTML/CSS\r\n        \r\n\r\n        <strong>BackEnd:</strong>\r\n\r\n        SAAS Prototype: Node.js, MongoDB, SignalR .NET, Firebase, express, MSSQL\r\n\r\n        Cloud DevOps at Saviynt: S3 bucket automation for data storage`,\r\n\r\n        \"AI/ML\": `   My experience with AI/ML has been entirely based on my interest in the field and the knowledge I have gained through personal projects and online learning.\r\n        \r\n        SamsGPT: Before this website was used for its design, I used the ChatGPT API to train a model on my resume. This project involved a lot of:\r\n        •   Prompt engineering, \r\n        •   Familiarzing myself with the ChatGPT API, it's applications, limitations and the expense related to building a custom AI (spoiler alert: even if you use an API, it's pretty expensive!)\r\n        •   Data pre-processing \r\n\r\n        Stealth Startup: I'm currently working on understanding the technical and operational benefits between various AI Models to execute a script to automate certain processes in a corporate setting. This project involves:\r\n        •  ML Algorithms\r\n        •  Chat GPT, Llama, Gemini APIs\r\n        •  Data Processing and pre-processing concepts\r\n\r\n        All my learning with respect to AI has been from colleagues, online courses and certifications. This is my most recent passion in tech and I'm hoping to take it forward in the future!\r\n        `,\r\n         \"Tools\": `   I learnt to use various different technical tools throughout my experiences:\r\n         \r\n         Git: \r\n         •  execution of various git commands including commits, rebase, cherrypick, resolving merge conflicts etc.\r\n         •  programatically changed repo settings, creates git pipelines etc by generating and utilizing access tokens \r\n         •  studied the git API documentation extensively \r\n\r\n         Atlassian Toolset: \r\n         •  utilized Jira to create, assign and arrange tasks\r\n         •  utilized BitBucket for creating test cases at Honeywell\r\n         •  utilized Confluence to create thorough code documentation and share my work with the team\r\n\r\n         Agile:\r\n         •  effectively participated in the Agile Development process with daily standups, sprint meetings etc\r\n\r\n         API documentation:\r\n         •  thoroughly documented API code bases for over 100 test files at Honeywell\r\n         •  documented each method with the definition, input datatype and return type of each function.\r\n         •  proceeded to test and debug error prone methods\r\n        \r\n         Test Automation + Functional/Regression Testing: \r\n         •  created test scripts at Honeywell for a voice enabled android application\r\n         •  performed Functional and Regressional Testing to ensure error proof transition to the latest deployment version`\r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst WorkExperience = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `    <strong>Test Engineering Intern, Honeywell, Pittsburgh, PA May-August 2023</strong>\r\n\r\n• Found and pushed fixes for two major bugs before version release for embedded Android voice enabled application.\r\n• Designed and implemented a website for test automation tools using CSS, HTML, Python, and Flask.\r\n• Created test scripts and enhanced API documentation for proprietary test automation framework in Python using Sphinx.\r\n• Participated in the Agile/Scrum Software Development process - Sprint Planning, Standup, etc.\r\n\r\n<strong>Undergraduate Teaching Assistant, University of Pittsburgh, Pittsburgh, PA 2023-2024 </strong>\r\n• Conducted weekly recitations, created quizzes/mock exams, graded assignments, and hosted office hours for students in CS0445 Algorithms and Data Structures & CS0401 Intermediate Programming in Java.\r\n\r\n<strong>Website Development Intern, YouthPlaces, Pittsburgh, PA January-May 2023</strong>\r\n• Modified the organization’s website to monitor website traffic and digital risk rates using HTML and JS.\r\n• Added features to reflect real time events, programs and donations using Bootstrap, Flask, Sphinx and WordPress.\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"Cloud Devops Intern @ Saviynt\",\r\n        \"Test Engineering Intern @ Honeywell\",\r\n        \"Web Dev Intern @ YouthPlaces\",\r\n    ]);\r\n\r\n    const responses = {\r\n        \"Cloud Devops Intern @ Saviynt\": `   `,\r\n        \"Experience in Cloud\": `    I have been working within the cloud for the past year with 3 months of concentrated experience working at Saviynt as a Cloud DevOps Intern.\r\n        \r\n        - managed roll creation, access management and assumRole functionality on IAM\r\n\r\n        - programatically created, stored and accessed datasets in S3 buckets\r\n\r\n        - created Lambda functions to execute hands-free automation\r\n\r\n        - created cloud cluster environment for customer access using EC2, EKS and Kubernetes\r\n\r\n        - automated virtual session host creaton using EC2 `,\r\n        \"FrontEnd/Backend Experience\": `   Through my personal ventures, internship experiences and my role as founder in SAAS startups, I (tried to) learn the art of being a full stack developer! My projects with associated skills:\r\n        \r\n        <strong>FrontEnd:</strong>\r\n\r\n        Personal Website + other projects: React, HTML, CSS, JavaScript, AI/ML, Git\r\n\r\n        Test Engineering Intern at Honeywell: HTML/CSS, React\r\n\r\n        SAAS prototype: React, Flask, Vercel\r\n\r\n        Website Developer at YouthPlaces: WordPress, HTML/CSS\r\n        \r\n\r\n        <strong>BackEnd:</strong>\r\n\r\n        SAAS Prototype: Node.js, MongoDB, SignalR .NET, Firebase, express, MSSQL\r\n\r\n        Cloud DevOps at Saviynt: S3 bucket automation for data storage`,\r\n\r\n         \"Tools\": `   I learnt to use various different technical tools throughout my experiences:\r\n         \r\n         Git: \r\n         - can execute various git commands including commit, rebase, cherrypick, resolve merge conflicts\r\n         - programatically change settings by generating and utilizing access tokens \r\n         - studied the git API documentation\r\n\r\n         Atlassian Toolset: \r\n         - Utilized Jira to create, assign and arrange tasks\r\n         - Utilized BitBucket for creating test cases at Honeywell\r\n         - Utilized Confluence to create thorough code documentation and share files with my teams\r\n\r\n         Agile:\r\n         - Effectively participated in the Agile Development process with daily standups, sprint meetings etc\r\n\r\n         API documentation:\r\n         - Thoroughly documented API code base for over 100 test files at Honeywell\r\n         - Documented each method with the definition, input datatype and return type of each function.\r\n        \r\n         Test Automation + Functional/Regression Testing: \r\n         - Created test scripts at Honeywell for a voice enabled android application\r\n         - Performed Functional and Regressional Testing to ensure error proof transition to the latest deployment version`\r\n    };\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default WorkExperience;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n\r\nconst Entre = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   You made it to my favorite part!! I have been an entrepreneur at heart since a very young age. \",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Tell me more about Akimas\",\r\n        \"Tell me more about Solstis\",\r\n        \"What is your purpose behind this?\",\r\n    ];\r\n\r\n    const responses = {\r\n        \"Tell me more about Akimas\": \"     \",\r\n        \"Tell me more about Solstis\": \"    \",\r\n        \"What is your purpose behind this?\": \"   \",\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Entre;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst ExtraCurricular = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   <strong>Vice-President, Women in Computer Science (WICS), Pittsburgh, PA    2023-2024 </strong>\r\n\r\n• Introduced fortune 100 sponsors and technical workshops for underrepresented student communities.\r\n\r\n<strong> President, Lothrop Hall Council, Pittsburgh, PA    2022-2023 </strong>\r\n\r\n• Lead a council of students and resident assistants to organize bi-weekly events for over 600 student residents.\r\n\r\n<strong>Club Member, Pitt FSAE Panther Racing, Pittsburgh, PA   2022-present </strong>\r\n\r\n• Converted sensory signals to assembly language using ROS and Arduino to program a life-size intended F1 car.\r\n• Completed coursework on ROS, Linux, and Optimization Theory to get the vehicle ready for competition.\r\n\r\n<strong> Hackathon, SheInnovates, Pittsburgh, PA     2023 </strong>\r\n\r\n• Developed an application for OCD therapy with integrated sensors using HTML, Python, and Figma`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"What's it like to work with Samika?\",\r\n        \"What are her hobbies?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ]);\r\n\r\n    const responses = {\r\n        \"What's it like to work with Samika?\": `\"  <strong>#1 When I believe in an idea, I pursue it wholeheartedly.</strong>\r\n\r\n        •  At Saviynt, I pitched an idea I had to create in-house automations that would save 48min-1.2h/day for over 600 employees.\r\n        •  The CEO approved of the POC, single coolest moment of my corporate life.\r\n\r\n\r\n        <strong>#2 Apart from my sense of humor, I also have a passion for making things more efficient.</strong>\r\n\r\n        •  At Honeywell, I helped create the internal testing website which improved efficiency within the testing team by 30% in the first month. \r\n        •  I also replaced the background with the Elmo on fire meme, thereby making history in Pittsburgh's Honeywell office as the \"Elmo intern\". What's productivity without a lil humor?\r\n        \r\n\r\n        <strong>#3 Great things are never done by one person..</strong>\r\n\r\n        •  Having led a team of 8 people at my startup, I learnt the fundamentals of leadership.\r\n        •  No matter how good one may be, we are nothing without our team.`,\r\n        \"What are her hobbies?\": `\"   Apart from coding the most random ideas at 3am I also enjoy:\r\n\r\n•  cooking (especially Thai food)\r\n\r\n•  painting, bowling, top golf \r\n\r\n•  volunteering at the animal shelter (let me know if you'd be interested as well!)\r\n\r\n•  examining car engines (especially v8 sport cars)\r\n\r\n•  rooting for Ferrari in Formula 1 races\r\n\r\n•  always trying to find problems that I could turn into the next million $ idea!`,\r\n        \"What is she like outside work?\": `   <strong>\"The key to success is happiness\"</strong>\r\n\r\nI make sure to take time to do things that keep me mentally calm and refreshed. This includes giving enough time to develop the ideas that I am passionate about, spending time with friends and family, taking a break to pet a cute dog, and doing spontaneous things with my friends!`,\r\n        \"I'm bored and I want to play a game\": \"   Sure! Here's a few games I love playing:\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ExtraCurricular;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Projects = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   Hi! Thanks for stopping by :) I'm Samika, a senior at Pitt studying Computer Science. I built Sam's GPT to be an AI version of me to reflect my recent interest in AI/ML! A quick introduction:\r\n\r\n•  I graduate in 2025 with a degree in Computer Science at the <a href=\"https://www.pitt.edu/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">University of Pittsburgh</a> (Dean's List '24 and '23). I am also an international student from India in the USA on an F1 visa :)\r\n\r\n•  2x Founder with a deep rooted passion for making a tangible positive impact using technology\r\n\r\n•  I'm currently looking for full time roles in software/cloud engineering for 2025. \r\n\r\n•  Core skills: Java, Python, HTML/CSS, AWS (Lambda, EC2, EKS, S3), Git, Node.js, React, Docker, Kubernetes, etc. \r\n\r\n•  Previously worked as a Cloud DevOps Engineering Intern @ <a href=\"https://saviynt.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Saviynt</a>, Test Engineering Intern @ <a href=\"https://www.honeywell.com/us/en\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Honeywell</a> and currently serve as CEO of a SAAS company\r\n\r\n•  Part time chef for my entire friend group and oh i love cars <a href=\"https://www.porsche.com/international/models/911/911-gt3-rs/911-gt3-rs/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">(Porsche 911 GT3 RS</a> in particular)`, \r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n    \r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([ // State to keep track of remaining options\r\n        \"What's it like to work with Samika?\",\r\n        \"What are her hobbies?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ]);\r\n    \r\n\r\n    const responses = {\r\n        \"What's it like to work with Samika?\": `\"  <strong>#1 When I believe in an idea, I pursue it wholeheartedly.</strong>\r\n\r\n        \"The ones who are crazy enough to think they can change the world, are the ones who do\" - Steve Jobs\r\n\r\n        15 year old Samika took his words as gospel, literally. \r\n\r\n         • When I was 17, I created a cloud kitchen in my hometown, Pune. It was basically Uber eats on a smaller scale during Covid-19 but had a ROI of 175%. All the proceeds were donated to the <a href=\"https://prashanticancercare.org/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Prashanti Cancer Care Mission</a> (donate if you can!).\r\n         • In college, I've created and worked on more ideas than I can count, I've always been an entrepreneur at heart. I love exploring new tech, new places and new people hoping to learn and create something new. Something capable of helping people, making a positive impact and hopefully one day, capable of changing the world.\r\n\r\n\r\n        <strong>#2 Apart from my sense of humor, I also have a passion for making things more efficient.</strong>\r\n\r\n        •  At Saviynt, I pitched an idea I had to create in-house automations that would save 48min-1.2h/day for over 600 employees. The CEO approved of the POC, single coolest moment of my corporate life.\r\n        •  At Honeywell, I helped create the internal testing website to improve efficiency within the team. I also replaced the background with the Elmo on fire meme for a day, thereby making history in Pittsburgh's Honeywell office as the \"Elmo intern\". Shoutout to Maegan, Debby and the team! \r\n        •  In conclusion, what's productivity without a lil humor?\r\n        \r\n\r\n        <strong>#3 Great things are never done by one person.</strong>\r\n\r\n        •  Having led a team of 8 people at my startup, I learnt the fundamentals of leadership.\r\n        •  No matter how good one may be, we are nothing without our team.`,\r\n        \"What are her hobbies?\": `   Apart from coding the most random ideas at 3am I also enjoy:\r\n\r\n•  cooking (especially Thai food)\r\n\r\n•  painting, bowling, top golf \r\n\r\n•  volunteering at the animal shelter (let me know if you'd be interested as well!)\r\n\r\n•  examining car engines (especially v8 sport cars)\r\n\r\n•  rooting for Ferrari in Formula 1 races\r\n\r\n•  always trying to find problems that I could turn into the next million $ idea!`,\r\n        \"What is she like outside work?\": `   <strong>\"The key to success is happiness\"</strong>\r\n\r\nI make sure to take time to do things that keep me mentally calm and refreshed. This includes giving enough time to develop the ideas that I am passionate about, spending time with friends and family, taking a break to pet a cute dog, and doing spontaneous things with my friends!`,\r\n        \"I'm bored and I want to play a game\": ` Sure! Here's a few games you can play:\r\n        \r\n         •  <a href=\"https://www.chess.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Chess</a>\r\n         •  <a href=\"https://www.rockstargames.com/gta-v\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">GTA V</a> (we got Sam's AI version before GTA VI)\r\n         •  <a href=\"https://www.google.com/logos/2010/pacman10-i.html\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Pac-Man</a> (the OG) \r\n         •  <a href=\"http://slither.com/io\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Slither.io</a> (extremely addictive) \r\n         •  <a href=\"https://www.callofduty.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Call of Duty</a> (extremely addictive)\r\n         •  <a href=\"https://www.king.com/game/candycrush\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Candy Crush</a> (shoutout to my mom!)    `  \r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\n// Define the MainContent component\r\nconst Links = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState(''); // Add this line\r\n\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n    \r\n\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const options = [\r\n        \"Give me a quick introduction to Samika\",\r\n        \"What's it like to work with Samika?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ];\r\n\r\n    const responses = {\r\n        \"Give me a quick introduction to Samika\": \"    I'm Samika, a senior at the University of Pittsburgh pursuing a bachelors in Computer Science. Apart from stressing about my visa status, I love exploring and applying new tech!\",\r\n        \"What's it like to work with Samika?\": \"    need to add so tired rn\",\r\n        \"What is she like outside work?\": \"    i dont have a personality\",\r\n        \"I'm bored and I want to play a game\": \"   play with my heart\"\r\n    };\r\n\r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option); // Add this line\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setTimeout(() => { // Simulate delay for answering\r\n            setIsAnswering(false);\r\n            setShowOptions(true); // Show options after answering\r\n        }, 1000);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p>{initialMessage}</p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n        <div key={index} className=\"chat-entry\">\r\n            <div className=\"question-container\">\r\n                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n            </div>\r\n            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n        </div>\r\n    ))}\r\n\r\n\r\n            </div>\r\n            \r\n            <div className=\"options-with-image\">\r\n                    {showOptions && (\r\n                        <div className=\"options-container\">\r\n                            {options.map((option, index) => (\r\n                                <div key={index} className=\"option-item\">\r\n                                    <Button\r\n                                        label={option}\r\n                                        onClick={() => handleButtonClick(option)}\r\n                                        isSelected={false}\r\n                                    />\r\n                                    {index === options.length - 1 && (\r\n                                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Links;\r\n","import React from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport MainContent from './components/MainContent';\nimport Education from './components/Education';\nimport Skills from './components/Skills';\nimport WorkExperience from './components/WorkExperience';\nimport Entrepreneurship from './components/Entre';\nimport ExtraCurriculars from './components/ExtraCurriculars';\nimport Projects from './components/Projects';\nimport Links from './components/Links';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Sidebar />\n        <Routes>\n          <Route path=\"/profile\" element={<MainContent />} />\n          <Route path=\"/education\" element={<Education />} />\n          <Route path=\"/skills\" element={<Skills />} />\n          <Route path=\"/work-experience\" element={<WorkExperience />} />\n          <Route path=\"/entrepreneurship\" element={<Entrepreneurship />} />\n          <Route path=\"/extra-curriculars\" element={<ExtraCurriculars />} />\n          <Route path=\"/projects\" element={<Projects />} />\n          <Route path=\"/links\" element={<Links />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}