{"version":3,"sources":["components/Card.js","components/CustomImage.js","components/TopIcons.js","components/ProfileButton.js","components/TutorialOverlay.js","components/Sidebar.js","hooks/Typewriter.js","components/QuestionAnswer.js","components/MainContent.js","components/Education.js","components/Skills.js","components/WorkExperience.js","components/Entre.js","components/ExtraCurriculars.js","components/Projects.js","components/Links.js","components/intro.js","App.js","index.js"],"names":["Card","_ref","children","style","getResponsiveWidth","window","innerWidth","defaultStyles","top","left","width","height","backgroundColor","borderRadius","display","flexDirection","padding","boxSizing","flexShrink","transition","React","useEffect","handleResize","document","querySelector","addEventListener","removeEventListener","_jsx","className","styles","backgroundPosition","backgroundSize","backgroundRepeat","defaultProps","CustomImage","props","_props$image","backgroundImage","concat","image","iconContainer","justifyContent","imageContainer","cursor","icons","id","url","TopIcons","onToggleCollapse","collapsed","onClick","fontSize","fontFamily","lineHeight","fontWeight","marginBottom","alignItems","color","ProfileButton","text","active","buttonStyle","TutorialOverlay","onDismiss","highlights","setHighlights","useState","highlightConfigs","selector","calculateHighlights","newHighlights","map","_ref2","element","rect","getBoundingClientRect","scrollY","scrollX","filter","highlight","index","Sidebar","setCollapsed","showTutorial","setShowTutorial","location","useLocation","getResponsiveFontSize","collapsedStyles","querySelectorAll","forEach","_jsxs","handleToggle","console","log","marginTop","marginLeft","Link","to","pathname","margin","handleDismissTutorial","useTypewriter","onComplete","displayedText","setDisplayedText","currentIndex","intervalId","setInterval","length","prev","clearInterval","QuestionAnswer","question","answer","handleTypewriterComplete","useCallback","answerText","dangerouslySetInnerHTML","__html","replace","Button","border","outline","SelectedButton","isSelected","label","MainContent","chatHistory","setChatHistory","showOptions","setShowOptions","isAnswering","setIsAnswering","activeQuestion","setActiveQuestion","initialMessage","currentResponse","setCurrentResponse","remainingOptions","setRemainingOptions","responses","class","chat","src","alt","option","prevHistory","prevOptions","opt","setTimeout","handleButtonClick","Education","Skills","WorkExperience","ExtraCurricular","Projects","Links","Intro","App","Router","Routes","Route","path","Entrepreneurship","ExtraCurriculars","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4a41a571.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ children, style }) => {\r\n  // Define the responsive width\r\n  const getResponsiveWidth = () => {\r\n    if (window.innerWidth <= 600) { // For mobile devices\r\n      return '38vw'; // 90% of the viewport width\r\n    } else if (window.innerWidth <= 1024) { // For tablets\r\n      return '10vw'; // 60% of the viewport width\r\n    } else { // For desktop and larger screens\r\n      return '15vw'; // 30% of the viewport width\r\n    }\r\n  };\r\n\r\n  const defaultStyles = {\r\n    top: '0px',\r\n    left: '0px',\r\n    width: getResponsiveWidth(), // Responsive width\r\n    height: '100vh',\r\n    backgroundColor: '#171717',\r\n    borderRadius: '0px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '0px',\r\n    boxSizing: 'border-box',\r\n    flexShrink: 0,\r\n    transition: 'width 0.3s, padding 0.3s', // Ensure a smooth transition\r\n  };\r\n\r\n  // Handle window resize event to update the width\r\n  React.useEffect(() => {\r\n    const handleResize = () => {\r\n      document.querySelector('.card').style.width = getResponsiveWidth();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup listener on component unmount\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return <div className=\"card\" style={{ ...defaultStyles, ...style }}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  ImageContainer: {\r\n    width: '55px',\r\n    height: '55px',\r\n    borderRadius: '9999px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n};\r\n\r\nconst defaultProps = {\r\n  image: 'https://assets.api.uizard.io/api/cdn/stream/e2ffbe9b-2685-41ae-9a7e-73844efcce87.png',\r\n};\r\n\r\nconst CustomImage = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.ImageContainer,\r\n        backgroundImage: `url(${props.image ?? defaultProps.image})`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomImage;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  iconContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '20px',\r\n  },\r\n  imageContainer: {\r\n    width: '24px',\r\n    height: '24px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst icons = [\r\n  { id: 1, url: 'https://assets.api.uizard.io/api/cdn/stream/d623031a-d918-41d4-9fb3-2ac91c3d5ac0.png' },\r\n  \r\n];\r\n\r\nconst TopIcons = ({ onToggleCollapse, collapsed }) => {\r\n  return (\r\n    <div style={styles.iconContainer}>\r\n      <div\r\n        style={{\r\n          ...styles.imageContainer,\r\n          backgroundImage: `url(${icons[0].url})`,\r\n        }}\r\n        onClick={onToggleCollapse}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopIcons;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  button: {\r\n    fontSize: '20px',\r\n    fontFamily: 'Roboto, sans-serif',\r\n    lineHeight: '26px',\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    fontWeight: 400, // Regular font weight\r\n    marginBottom: '10px', // Add margin for spacing\r\n    alignItems: 'left',\r\n  },\r\n  activeButton: {\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#000000',\r\n    borderRadius: '5px',\r\n    alignItems: 'left',\r\n  },\r\n  inactiveButton: {\r\n    backgroundColor: 'transparent',\r\n    color: '#FFFFFF',\r\n  },\r\n};\r\n\r\nconst ProfileButton = ({ text = 'Profile', active = false, collapsed = false }) => {\r\n  const buttonStyle = active\r\n    ? { ...styles.button, ...styles.activeButton }\r\n    : { ...styles.button, ...styles.inactiveButton };\r\n\r\n  return (\r\n    <div style={buttonStyle} className={`profile-button ${collapsed ? 'collapsed' : ''}`}>\r\n      <span>{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './TutorialOverlay.css';\r\n\r\nconst TutorialOverlay = ({ onDismiss }) => {\r\n  const [highlights, setHighlights] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const highlightConfigs = [\r\n      { selector: '.top-left-icon', text: 'Click here to collapse the sidebar' },\r\n      { selector: '.previous-conversations', text: 'Explore other parts of my resume' },\r\n    ];\r\n\r\n    const calculateHighlights = () => {\r\n      const newHighlights = highlightConfigs.map(({ selector, text }) => {\r\n        const element = document.querySelector(selector);\r\n        if (element) {\r\n          const rect = element.getBoundingClientRect();\r\n          return {\r\n            text,\r\n            top: rect.top + window.scrollY,\r\n            left: rect.left + window.scrollX,\r\n            width: rect.width,\r\n            height: rect.height,\r\n          };\r\n        }\r\n        return null;\r\n      }).filter(highlight => highlight !== null);\r\n\r\n      setHighlights(newHighlights);\r\n    };\r\n\r\n    calculateHighlights();\r\n    window.addEventListener('resize', calculateHighlights);\r\n    return () => window.removeEventListener('resize', calculateHighlights);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tutorial-overlay\" onClick={onDismiss}>\r\n      {highlights.map((highlight, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"highlight\"\r\n          style={{\r\n            top: `${highlight.top}px`,\r\n            left: `${highlight.left}px`,\r\n            width: `${highlight.width}px`,\r\n            height: `${highlight.height}px`,\r\n          }}\r\n        >\r\n          <div className=\"highlight-text\" style={{ top: `${highlight.height +10}px` }}>\r\n            {highlight.text}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialOverlay;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Card from './Card';\r\nimport CustomImage from './CustomImage';\r\nimport TopIcons from './TopIcons';\r\nimport ProfileButton from './ProfileButton';\r\nimport TutorialOverlay from './TutorialOverlay'; // Import the TutorialOverlay\r\n\r\nimport './Sidebar.css';\r\n\r\n\r\nconst Sidebar = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [showTutorial, setShowTutorial] = useState(true); // State to control tutorial visibility\r\n  const location = useLocation();\r\n\r\n  // Function to determine responsive font size\r\n  const getResponsiveFontSize = () => {\r\n    if (window.innerWidth <= 600) {\r\n      return '14px'; // Font size for mobile devices\r\n    } else if (window.innerWidth <= 1024) {\r\n      return '14px'; // Font size for tablets\r\n    } else {\r\n      return '16px'; // Font size for desktops and larger screens\r\n      \r\n    }\r\n  };\r\n\r\n  const collapsedStyles = {\r\n    width: '70px',\r\n    padding: '10px',\r\n    alignItems: 'center',\r\n    fontSize: getResponsiveFontSize(), // Adjust font size for collapsed sidebar\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Handle window resize event to update font size\r\n    const handleResize = () => {\r\n      document.querySelectorAll('.profile-button span').forEach((element) => {\r\n        element.style.fontSize = getResponsiveFontSize();\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Initial font size setting\r\n    handleResize();\r\n\r\n    // Cleanup listener on component unmount\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const handleToggle = () => {\r\n    setCollapsed(!collapsed);\r\n    console.log('Sidebar collapsed:', !collapsed);\r\n  };\r\n\r\n  const handleDismissTutorial = () => {\r\n    setShowTutorial(false);\r\n  };\r\n\r\n  return (\r\n    <Card style={collapsed ? collapsedStyles : {}}>\r\n        <div className=\"top-left-icon\" onClick={handleToggle}>\r\n            <TopIcons collapsed={collapsed} />\r\n        </div>\r\n        <div style={{ marginTop: '20px', marginBottom: '25px', marginLeft: `5px` }}>\r\n            <div style={{ display: 'flex', alignItems: 'center' }} className=\"profile-button\">\r\n                <CustomImage />\r\n                {!collapsed && (\r\n                    <span \r\n                        style={{ \r\n                            color: '#ffffff', \r\n                            fontSize: getResponsiveFontSize(), \r\n                            marginLeft: '10px'  // Add margin here to create space\r\n                        }}\r\n                    >\r\n                        Samika\r\n                    </span>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n      \r\n    \r\n      <Link to=\"/intro\">\r\n      <Link to=\"/\">\r\n        <ProfileButton\r\n          text=\"Intro\"\r\n          active={location.pathname === '/' || location.pathname === '/intro'} // Active for both paths\r\n          collapsed={false} // or your state-controlled collapsed variable\r\n        />\r\n      </Link>\r\n  \r\n</Link>\r\n\r\n\r\n      <div style={{ marginTop: '15px', marginLeft: `10px`,color: '#b4b4b4' }} className=\"previous-conversations\">\r\n        {!collapsed && <span style={{ fontSize: getResponsiveFontSize() }}>Conversations</span>}\r\n      </div>\r\n      {!collapsed && (\r\n        <div style={{ backgroundColor: '#ffffff', height: '2px', width: '100%', margin: '10px 0' }}></div>\r\n      )}\r\n      <Link to=\"/profile\">\r\n        <ProfileButton\r\n          text=\"Profile\"\r\n          active={location.pathname === '/profile'}\r\n          collapsed={collapsed}\r\n          style={{ fontSize: getResponsiveFontSize() }} // Adjust font size dynamically\r\n        />\r\n      </Link>\r\n\r\n      <Link to=\"/work-experience\">\r\n        <ProfileButton\r\n          text=\"Work Experience\"\r\n          active={location.pathname === '/work-experience'}\r\n          collapsed={collapsed}\r\n          style={{ fontSize: getResponsiveFontSize() }} // Adjust font size dynamically\r\n        />\r\n      </Link>\r\n      <Link to=\"/skills\">\r\n        <ProfileButton\r\n          text=\"Skills\"\r\n          active={location.pathname === '/skills'}\r\n          collapsed={collapsed}\r\n          style={{ fontSize: getResponsiveFontSize() }} // Adjust font size dynamically\r\n        />\r\n      </Link>\r\n      <Link to=\"/entrepreneurship\">\r\n        <ProfileButton\r\n          text=\"Entrepreneurship\"\r\n          active={location.pathname === '/entrepreneurship'}\r\n          collapsed={collapsed}\r\n          style={{ fontSize: getResponsiveFontSize() }} // Adjust font size dynamically\r\n        />\r\n      </Link>\r\n      <Link to=\"/education\">\r\n        <ProfileButton\r\n          text=\"Education\"\r\n          active={location.pathname === '/education'}\r\n          collapsed={collapsed}\r\n          style={{ fontSize: getResponsiveFontSize() }} // Adjust font size dynamically\r\n        />\r\n      </Link>\r\n      <Link to=\"/extra-curriculars\">\r\n        <ProfileButton\r\n          text=\"Extra Curriculars\"\r\n          active={location.pathname === '/extra-curriculars'}\r\n          collapsed={collapsed}\r\n          style={{ fontSize: getResponsiveFontSize() }} // Adjust font size dynamically\r\n        />\r\n      </Link>\r\n      <Link to=\"/links\">\r\n        <ProfileButton\r\n          text=\"Links\"\r\n          active={location.pathname === '/links'}\r\n          collapsed={collapsed}\r\n          style={{ fontSize: getResponsiveFontSize() }} // Adjust font size dynamically\r\n        />\r\n      </Link>\r\n      {showTutorial && <TutorialOverlay onDismiss={handleDismissTutorial} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useTypewriter = (text, onComplete) => {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let currentIndex = 0;\r\n        \r\n        // Detect if the user is on a mobile device based on screen width\r\n        const isMobile = window.innerWidth <= 600;\r\n        \r\n        // Set a faster speed for mobile devices\r\n        const speed = isMobile ? 4 : 4; // Adjust speed as needed, 50ms for mobile, 100ms for desktop\r\n\r\n        const intervalId = setInterval(() => {\r\n            if (currentIndex < text.length-1) {\r\n                setDisplayedText((prev) => prev + text[currentIndex]);\r\n                currentIndex++;\r\n            } else {\r\n                clearInterval(intervalId);\r\n                if (onComplete) onComplete();\r\n            }\r\n        }, speed);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [text, onComplete]);\r\n\r\n    return displayedText;\r\n};\r\n\r\nexport default useTypewriter;\r\n","import React, { useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\n\r\nconst QuestionAnswer = ({ question, answer, onComplete }) => {\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        if (onComplete) onComplete(); // Call the onComplete function if provided\r\n    }, [onComplete]);\r\n\r\n    const answerText = useTypewriter(answer, handleTypewriterComplete);\r\n\r\n    return (\r\n        <div className=\"message\">\r\n            <CustomImage />\r\n            <div className=\"message-content\">\r\n                <p dangerouslySetInnerHTML={{ __html: answerText.replace(/\\n/g, '<br />') }}></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionAnswer;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst MainContent = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   I'm Samika, a senior at Pitt studying Computer Science :) A quick introduction:\r\n\r\n•  I graduate in 2025 with a degree in Computer Science at the <a href=\"https://www.pitt.edu/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">University of Pittsburgh</a> (Dean's List '24 and '23). I am also an international student from India in the USA on an F1 visa :)\r\n\r\n•  2x Founder with a deep rooted passion for making a tangible positive impact using technology\r\n\r\n•  Previously worked as a Cloud DevOps Engineering Intern @ <a href=\"https://saviynt.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Saviynt</a>, Test Engineering Intern @ <a href=\"https://www.honeywell.com/us/en\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Honeywell</a> and currently serve as CEO of a SAAS company\r\n\r\n•  I'm currently looking for full time roles in AI ML/software/cloud engineering for 2025. \r\n\r\n•  Core skills: Java, Python, HTML/CSS/JS, AI/ML (PyTorch, TensorFlow, Keras, Deep Learning), AWS (Lambda, EC2, EKS, S3), Git, Node.js, React, Docker \r\n\r\n•  Part time chef for my entire friend group and i love cars <a href=\"https://www.porsche.com/international/models/911/911-gt3-rs/911-gt3-rs/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">(Porsche 911 GT3 RS</a> in particular)`, \r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n    \r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([ // State to keep track of remaining options\r\n        \"What's it like to work with Samika?\",\r\n        \"What are your hobbies?\",\r\n        \"What are you like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ]);\r\n    \r\n\r\n    const responses = {\r\n        \"What's it like to work with Samika?\": `  <strong>#1 When I believe in an idea, I go all in.</strong>\r\n        \"The ones who are crazy enough to think that they can change the world, are the ones who do\" - Steve Jobs\r\n        15 year old Samika took his words as gospel, literally. \r\n\r\n         • At 17, I launched a cloud kitchen in Pune during COVID-19, returning a 75% net profit in the first 3 months. This marked the beginning of my obsession with technology and entrepreneurship. \r\n         • In college, I've created and worked on more ideas than I can count. I love exploring new tech, places, and people, always aiming to create something impactful and hopefully one day, world-changing.\r\n\r\n        <strong>#2 Apart from my sense of humor, I also have a passion for making things more efficient.</strong>\r\n        •  At Saviynt, I pitched an idea that would save up to 1.2h/day for over 600 employees. Having the CEO approve the POC was probably the single coolest moment of my corporate life.\r\n        •  At Honeywell, I helped create the internal testing website to improve efficiency within the team. I also replaced the background with the Elmo on fire meme for a day, thereby making history in Pittsburgh's Honeywell office as the \"Elmo intern\". Shoutout to Maegan, Debby and the team! \r\n        •  What's productivity without a lil humor?\r\n        \r\n        <strong>#3 Great things are never done by one person.</strong>\r\n        •  Having led a team of 8 people at my startup, I learnt the fundamentals of leadership.\r\n        •  No matter how good one may be, we are nothing without our team.`,\r\n        \"What are your hobbies?\": `   Apart from coding the most random ideas at 3am I also enjoy:\r\n\r\n•  cooking (especially Thai food)\r\n\r\n• singing and writing songs :)\r\n\r\n•  painting, bowling, top golf \r\n\r\n•  volunteering at the animal shelter (let me know if you'd be interested as well!)\r\n\r\n•  examining car engines (especially v8 sport cars)\r\n\r\n•  rooting for Ferrari in Formula 1 races`,\r\n        \"What are you like outside work?\": `   <strong>\"The key to success is happiness\"</strong>\r\n\r\nI make sure to take time to do things that keep me mentally calm and refreshed. This includes giving enough time to develop the ideas that I am passionate about, spending time with friends and family, taking a break to pet a cute dog, and doing spontaneous things with my friends!`,\r\n        \"I'm bored and I want to play a game\": `  Sure! Here's a few games you can play:\r\n        \r\n         •  <a href=\"https://www.chess.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Chess</a>\r\n         •  <a href=\"https://www.rockstargames.com/gta-v\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">GTA V</a> (we got Sam's GPT before GTA VI)\r\n         •  <a href=\"https://www.google.com/logos/2010/pacman10-i.html\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Pac-Man</a> (the OG) \r\n         •  <a href=\"http://slither.com/io\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Slither.io</a> (extremely addictive) \r\n         •  <a href=\"https://www.callofduty.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Call of Duty</a> (M4 is the best, change my mind)\r\n         •  <a href=\"https://www.king.com/game/candycrush\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Candy Crush</a> (shoutout to my mom!)    `  \r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div class=\"main-container\">\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MainContent;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Education = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   I am currently a rising senior pursuing a bachelors of science in Computer Science at the University of Pittsburgh! I have been involved in a myriad of on-campus clubs (Women in CS, Panther Racing, CSC, Hall Council etc) \r\n        To expand my love for teaching, I was also an Undergraduate Teaching Assistant for CS0401 - Intermediate Programming & CS0445 - Data Structures and Algorithms in Java. \r\n\r\nCurrent GPA: 4:00\r\nCumulative GPA: 3.45\r\nDeans List '23 and '24\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n  \r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n    \r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"Relevant CS coursework\",\r\n        \"Where can I find a copy of her transcripts?\",\r\n    ]);\r\n\r\n    const responses = {\r\n        \"Relevant CS coursework\": `  1) CMPINF0010: Big Ideas in Computing and Information\r\n        2) CS0401: Intermediate Programming in Java (UTA)\r\n        2) CS0445: Data Structures and Algorithms 1 (UTA)\r\n        3) CS0441: Discrete Structures for CS\r\n        4) CS0447: Computer Organization and Assembly Language\r\n        5) CS0449: Intro to Systems Software\r\n        6) CMPINF1205: Comparative Digital Privacies\r\n        7) CS1501: Algorithms and Data Structures 2\r\n        8) CS1550: Operating Systems (IP)\r\n        9) CS1520: Programming Languages for Web Applications (IP)\r\n        10) CS1632: Software Quality Assurance (IP)`,\r\n        \"Where can I find a copy of her transcripts?\": `   You can email me at sps76@pitt.edu \r\n        You can also contact me on my phone +1 412-651-2512 ! `,\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Skills = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `    <strong>Programming Languages:</strong> \r\nJava, Python, HTML/CSS, JavaScript, C#, C\r\n\r\n<strong>AI/ML</strong>\r\nML Algorithms (linear regression, decision trees), NLPs (tokenization, Stemming, BoW), Data Processing (Pandas, NumPy), Data Pre-processing, ChatGPT API Integration \r\n\r\n <strong>Cloud:</strong> \r\nAWS: IAM, EC2, EKS, Lambda functions, S3, CloudShell, Assume Role Management, Docker, Kubernetes, Microservices, Serverless Architecture, Terraform\r\n\r\n<strong>FrontEnd: </strong> \r\nReact, Angular, Android, Vercel, Bootstrap, Sphinx, Test automation, Functional and Regression testing, Penetration testing\r\n\r\n<strong>Backend:</strong> \r\nFlask, S3, DynamoDB, MongoDB, Node.js, SignalR .NET, Firebase, express, MSSQL\r\n\r\n<strong>Tools: </strong> \r\nGit, RESTful API, Atlassian Toolset (JIRA, Bitbucket, Confluence), IAPs (Identity-Aware Proxies), Appium and Selenium, ROS (Robot Operating System), Agile Software Development Process, SourceTree\r\n\r\n<strong>IDE Software:</strong> \r\n Microsoft Visual Studio, Eclipse, Logisim, Arduino, IntelliJ\r\n\r\n Select an option below to know more about individual skillsets!\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"Programming Languages\",\r\n        \"AI/ML\",\r\n        \"Cloud\",\r\n        \"FrontEnd/Backend Experience\",\r\n        \"Tools\",\r\n    ]);\r\n\r\n    const responses = {\r\n        \"Programming Languages\": `   I've been coding for the past 5 years and have learnt a myriad of languages since. My years of experience in each: \r\n        \r\n        Java: 5+ years\r\n\r\n        Python: 3+ years\r\n        \r\n        HTML/CSS/JavaScript: 2+ years\r\n\r\n        C#: 1 year\r\n\r\n        C: 1 year`,\r\n        \"Cloud\": `    I have been working within the cloud for the past year with 3 months of concentrated experience working at Saviynt as a Cloud DevOps Intern. So far, I have:\r\n        \r\n        •  managed roll creation, access management and assumRole functionality on IAM\r\n\r\n        •  created Lambda functions to execute hands-free automation using APIs and external integrations\r\n\r\n        •  created lambda function for email security, 2FA and encryption of passwords on the cloud\r\n\r\n        •  programatically created, stored and accessed datasets in S3 buckets\r\n\r\n        •  created cloud cluster environments for customer access using EC2, EKS and Kubernetes\r\n\r\n        •  automated virtual session host creaton using EC2 `,\r\n        \"FrontEnd/Backend Experience\": `   Through my personal ventures, internship experiences and my role as founder in SAAS startups, I (tried to) learn the art of being a full stack developer! My projects with associated skills:\r\n        \r\n        <strong>FrontEnd:</strong>\r\n\r\n        Personal Website + other projects: React, HTML, CSS, JavaScript, Git\r\n\r\n        Test Engineering Intern at Honeywell: HTML/CSS, React\r\n\r\n        SAAS prototype: React, Flask, Vercel\r\n\r\n        Website Developer at YouthPlaces: WordPress, HTML/CSS\r\n        \r\n\r\n        <strong>BackEnd:</strong>\r\n\r\n        SAAS Prototype: Node.js, MongoDB, SignalR .NET, Firebase, express, MSSQL\r\n\r\n        Cloud DevOps at Saviynt: S3 bucket automation for data storage`,\r\n\r\n        \"AI/ML\": `   My experience with AI/ML has been entirely based on my interest in the field and the knowledge I have gained through personal projects.\r\n        \r\n        SamsGPT: Before this website was used for its design, I used the ChatGPT API to train a model on my resume. This project involved a lot of:\r\n        •   Prompt engineering, \r\n        •   Familiarzing myself with the ChatGPT API, it's applications, limitations and the expense related to building a custom AI (spoiler alert: even if you use an API, it's pretty expensive!)\r\n        •   Data pre-processing \r\n\r\n        Stealth Startup: I'm currently working on understanding the technical and operational benefits between various AI Models to execute a script to automate certain processes in a corporate setting. This project involves:\r\n        •  ML Algorithms\r\n        •  Chat GPT, Llama, Gemini APIs\r\n        •  Data Processing and pre-processing concepts\r\n\r\n        All my learning with respect to AI has been from colleagues, online courses and certifications. This is my most recent passion in tech and I'm hoping to take it forward in the future!\r\n        `,\r\n         \"Tools\": `   I learnt to use various different technical tools throughout my experiences:\r\n         \r\n         Git: \r\n         •  execution of various git commands including commits, rebase, cherrypick, resolving merge conflicts etc.\r\n         •  programatically changed repo settings, creates git pipelines etc by generating and utilizing access tokens \r\n         •  studied the git API documentation extensively \r\n\r\n         Atlassian Toolset: \r\n         •  utilized Jira to create, assign and arrange tasks\r\n         •  utilized BitBucket for creating test cases at Honeywell\r\n         •  utilized Confluence to create thorough code documentation and share my work with the team\r\n\r\n         Agile:\r\n         •  effectively participated in the Agile Development process with daily standups, sprint meetings etc\r\n\r\n         API documentation:\r\n         •  thoroughly documented API code bases for over 100 test files at Honeywell\r\n         •  documented each method with the definition, input datatype and return type of each function.\r\n         •  proceeded to test and debug error prone methods\r\n        \r\n         Test Automation + Functional/Regression Testing: \r\n         •  created test scripts at Honeywell for a voice enabled android application\r\n         •  performed Functional and Regressional Testing to ensure error proof transition to the latest deployment version`\r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst WorkExperience = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   I have had a myriad of professional experiences that have shaped my technical and interpersonal skills. Click on the options below to learn more about each individual experience!\r\n        \r\n        <strong>Cloud DevOps Intern</strong>\r\n        <a href=\"https://saviynt.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Saviynt</a> Los Angeles, CA\r\n        May-August 2023\r\n        <em>Skills: AWS Lambda, IAM, EC2, S3, DynamoDB, boto3, SES, Git automation, Python, Java, Virtru, SalesForce, Atlassian (Jira, Confluence)</em>\r\n         \r\n        <strong>Test Engineering Intern</strong>\r\n        <a href=\"https://www.honeywell.com/us/en\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Honeywell</a>, Pittsburgh, PA\r\n        May-August 2023\r\n<em>Skills: Python, Java, GitHub, Agile, Android, Bootstrap, Sphinx, Flask, API documentation, Test automation, Functional and Regression testing, Atlassian Toolset (JIRA, Bitbucket, Confluence), Appium and Selenium, SourceTree</em> \r\n\r\n<strong>Undergraduate Teaching Assistant</strong>\r\n<a href=\"https://www.pitt.edu/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">University of Pittsburgh</a>, Pittsburgh, PA    \r\n2023-2024 \r\n<em>Skills: Using memes as an effective strategy to explain difficult concepts</em>\r\n\r\n<strong>Website Development Intern</strong>\r\n<a href=\"https://youthplaces.org/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">YouthPlaces</a>, Pittsburgh, PA \r\nJanuary-May 2023\r\n<em>Skills: HTML, CSS, JS, WordPress</em>\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"Cloud Devops Intern @ Saviynt\",\r\n        \"Test Engineering Intern @ Honeywell\",\r\n        \"Undergraduate Teaching Assistant\",\r\n        \"Web Dev Intern @ YouthPlaces\",\r\n    ]);\r\n\r\n    const responses = {\r\n        \"Cloud Devops Intern @ Saviynt\": `  \"You will not be remembered for what you have started, but for what you have successfully completed.\" — Hamadi Jamali (my awesome manager)\r\n\r\nWorking at Saviynt was an opportunity to bring creative solutions to life in a supportive environment. I worked on:\r\n\r\n• Security POC: Created and executed a security Proof of Concept (POC) for automated email encryption, protecting cloud cluster environment details using Python, Virtrue, and DynamoDB.\r\n\r\n• Automation & Efficiency: Developed a GitLab automation script that integrated 15,000+ customer databases with corresponding Salesforce information. This reduced billing errors by 40%, saved 50-60 hours of manual work, and improved the efficiency of the customer onboarding process.\r\n\r\n• Lambda Functions: Executed Lambda functions for hands-free automation, saving 48 minutes to 1.2 hours of employee time per task, including email verification, 2FA, and encryption of passwords sent to customers.\r\n\r\n• Data Management: Programmatically created, stored, and accessed datasets in S3 buckets, saving 2 hours per day on manual financial report consolidation with a 40% reduction in errors.`,\r\n        \"Test Engineering Intern @ Honeywell\": `   At Honeywell, I had the privilege of working with an exceptional team that exposed me to professional app development from initial build to final deployment. My time at Honeywell was both challenging and rewarding, pushing me to grow technically and personally. A recap:\r\n        \r\n    • Found and pushed fixes for two major bugs before version release for embedded Android voice enabled application.\r\n• Designed and implemented a website for test automation tools using CSS, HTML, Python, and Flask.\r\n• Created test scripts and enhanced API documentation for proprietary test automation framework in Python using Sphinx.\r\n• Participated in the Agile/Scrum Software Development process - Sprint Planning, Standup, etc. \r\n•  And ofcourse, being the Elmo Intern!  `,\r\n        \"Undergraduate Teaching Assistant\": `  I served as an undergraduate Teaching Assistant for CS0445: Data Structures and Algorithms 1 and CMPINF0401: Intermediate Programming in Java. I have always loved teaching, especially core concepts in Computer Science. One of my favorite accomplishments will always be having a class in full attendance at 9am on a Thursday! \r\n        My role involved conducting weekly recitations, creating quizzes/mock exams, grading assignments, and hosting office hours!`,\r\n\r\n         \"Web Dev Intern @ YouthPlaces\": `   I took part in Pitt's IServe program that aims at helping Computer Science students serve non-profit organizations where I: \r\n• Modified the organization’s website to monitor website traffic and digital risk rates using HTML and JS.\r\n• Added features to reflect real time events, programs and donations using Bootstrap, Flask, Sphinx and WordPress.`\r\n    };\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default WorkExperience;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst MainContent = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `  Congrats, you made it to my favorite part!! As a kid, it was practically impossible to seperate me from my copy of the autobiography of Steve Jobs. Not because I was obsessed with him, but because i was obsessed with the Idea of changing the world. To be fair, 10 year old Sam didn't understand how big the world <em>really</em> was. \r\n        \r\n        <strong>AkimasBakingCo</strong>\r\n        At the time, Ubereats and other food delivery software were out of business in my hometown, Pune (India). I saw this opening in the market as a chance to deploy a simple yet effective cloud kitchen in the city.\r\n        I developed a script that would:\r\n        1) intake food orders through a google form on the company's instagram (including customer address and contact info)\r\n        2) automatically contact a local delivery service and connect me with a driver nearby who could drop off the prepared food in under 30 mins\r\n        3) send the intake order to an online interface in the kitchen where my team would prepare the food \r\n        4) within 30-60 mins the food would be at the users door. Contactless, efficient and profitable. \r\n\r\n        Click the option below if you're curious to know how that ended :)\r\n        \r\n        <strong> Solstis </strong>\r\n        I started my second \"company\", Solstis, in college. My co-founders (shoutout to Pratik and Shorya) and I built a POC for an AI and Cloud driven platform that would:\r\n        1) guide early stage entrepreneurs through the process of converting their ideas from a POC to a business model\r\n        2) connect entrepreneurs in the area with each other as well as investors, advisors etc.\r\n        3) in simple words, a LinkedIn for entrepreneurs \r\n\r\n        We recieved funding from Microsofts Founder's Hub, incubated into Carnegie Mellon's Schwartz Center of Entrepreneurship and the Pitt Big Ideas Center. Through their support, our bootstrap cost was nearly $0 (thank god)\r\n\r\n        Click the Solstis option to know what happened!\r\n\r\n        <strong> Mystery Project </strong>\r\n        My most recent project that I'm hoping to turn into the next million $ idea (jk, kinda) is a software that automates the ticket assigning process in management tools like Jira using AI. \r\n        Our goal is to use AI to make teams within any-size companies more efficient by:\r\n        1) reducing ticket backlog by analyzing sprint requirements \r\n        2) assign tasks based on individual expertise and workload (configurable data files that can prioritize work hours/expertise/new projects)\r\n        3) using ML to learn a teams work dynamic and understand the best assigning process for highest productivity rates\r\n\r\n        The project is intended to be a pivot for Solstis and is pretty early stage right now but we're excited to see where it goes!\r\n        `, \r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n    \r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([ // State to keep track of remaining options\r\n        \"AkimasBakingCo\",\r\n        \"Solstis\",\r\n        \"Mystery Project\",\r\n    ]);\r\n    \r\n\r\n    const responses = {\r\n        \"AkimasBakingCo\": `   We stopped operations in 2022, a year after I moved to the United States. We had an annualized ROI of 175%, making around Rs. 2,00,000 in the first 6 months of operation. \r\n        We donated the majority of it to various causes:\r\n        1) Funding the treatment of underpriviledged breast cancer patients through the <a href=\"https://prashanticancercare.org/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Prashanti Cancer Care Mission</a> \r\n        2) Covid-19 relief in India through <a href=\"https://www.khalsaaid.org/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Khalsa Aid</a>\r\n        3) Wild animal rescue and rehabilitation through <a href=\"https://www.resqct.org/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Rescue CT</a> \r\n        \r\n        P.S: Please consider donating to any of the organizations if you can :)`,\r\n        \"Solstis\": `    After our initial POC, as most entrepreneurial ventures go, we realized that our product-market fit was not good enough for us to enter the market with a profitable margin. \r\n        Learning to make, market and network with people in the entrepreneurial world will always be one of my favorite learning experiences. Hence, after about 8 months of working on the idea and a million pivots later, we decided to focus more on our upcoming project!`,\r\n        \"Mystery Project\": `   it wouldn't really be a mystery if i told you more about it now, would it?    `  \r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MainContent;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst ExtraCurricular = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   I've been a part of a myriad of clubs and attempted to follow many of my non-coding passions (like being a singer haha). Some of the clubs I'm involved in:\r\n        \r\n<strong>Vice-President, Women in Computer Science (WICS), Pittsburgh, PA    2023-2024 </strong>\r\n\r\n<strong> President, Lothrop Hall Council, Pittsburgh, PA    2022-2023 </strong>\r\n\r\n<strong>Club Member, Pitt FSAE Panther Racing, Pittsburgh, PA   2022-present </strong>\r\n\r\n<strong> Hackathon, SheInnovates, Pittsburgh, PA     2023 </strong>\r\n\r\nI'm also extremely passionate about women empowerment in technology. I attend events like the Grace Hopper Conference and WECode to advocate for this!\r\n\r\nApart from this, in my free time I write songs, play the piano, play soccer, spikeball, volleyball and am currently trying to learn MMA! I'm also hoping to continue my passion for surfing after graduating :))\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n        \"WICS\",\r\n        \"Lothrop Hall Council\",\r\n        \"FSAE Panther Racing\",\r\n        \"SheInnovates\"\r\n        \r\n    ]);\r\n\r\n    const responses = {\r\n        \"WICS\": `  <strong>Vice-President, Women in Computer Science (WICS), Pittsburgh, PA    2023-2024 </strong>\r\n\r\n• Introduced fortune 100 sponsors and technical workshops for underrepresented student communities.`,\r\n        \"Lothrop Hall\": `<strong> President, Lothrop Hall Council, Pittsburgh, PA    2022-2023 </strong>\r\n        \r\n        • Lead a council of students and resident assistants to organize bi-weekly events for over 600 student residents.`,\r\n        \"FSAE Panther Racing\": `   <strong>Club Member, Pitt FSAE Panther Racing, Pittsburgh, PA   2022-present </strong>\r\n• Converted sensory signals to assembly language using ROS and Arduino to program a life-size intended F1 car.\r\n• Completed coursework on ROS, Linux, and Optimization Theory to get the vehicle ready for competition.`,\r\n        \"SheInnovates\": `Developed an application for OCD therapy with integrated sensors using HTML, Python, and Figma! `,\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ExtraCurricular;","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Projects = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   Hi! Thanks for stopping by :) I'm Samika, a senior at Pitt studying Computer Science. I built Sam's GPT to be an AI version of me to reflect my recent interest in AI/ML! A quick introduction:\r\n\r\n•  I graduate in 2025 with a degree in Computer Science at the <a href=\"https://www.pitt.edu/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">University of Pittsburgh</a> (Dean's List '24 and '23). I am also an international student from India in the USA on an F1 visa :)\r\n\r\n•  2x Founder with a deep rooted passion for making a tangible positive impact using technology\r\n\r\n•  I'm currently looking for full time roles in software/cloud engineering for 2025. \r\n\r\n•  Core skills: Java, Python, HTML/CSS, AWS (Lambda, EC2, EKS, S3), Git, Node.js, React, Docker, Kubernetes, etc. \r\n\r\n•  Previously worked as a Cloud DevOps Engineering Intern @ <a href=\"https://saviynt.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Saviynt</a>, Test Engineering Intern @ <a href=\"https://www.honeywell.com/us/en\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Honeywell</a> and currently serve as CEO of a SAAS company\r\n\r\n•  Part time chef for my entire friend group and oh i love cars <a href=\"https://www.porsche.com/international/models/911/911-gt3-rs/911-gt3-rs/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">(Porsche 911 GT3 RS</a> in particular)`, \r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n    \r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([ // State to keep track of remaining options\r\n        \"What's it like to work with Samika?\",\r\n        \"What are her hobbies?\",\r\n        \"What is she like outside work?\",\r\n        \"I'm bored and I want to play a game\"\r\n    ]);\r\n    \r\n\r\n    const responses = {\r\n        \"What's it like to work with Samika?\": `\"  <strong>#1 When I believe in an idea, I pursue it wholeheartedly.</strong>\r\n\r\n        \"The ones who are crazy enough to think they can change the world, are the ones who do\" - Steve Jobs\r\n\r\n        15 year old Samika took his words as gospel, literally. \r\n\r\n         • When I was 17, I created a cloud kitchen in my hometown, Pune. It was basically Uber eats on a smaller scale during Covid-19 but had a ROI of 175%. All the proceeds were donated to the <a href=\"https://prashanticancercare.org/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Prashanti Cancer Care Mission</a> (donate if you can!).\r\n         • In college, I've created and worked on more ideas than I can count, I've always been an entrepreneur at heart. I love exploring new tech, new places and new people hoping to learn and create something new. Something capable of helping people, making a positive impact and hopefully one day, capable of changing the world.\r\n\r\n\r\n        <strong>#2 Apart from my sense of humor, I also have a passion for making things more efficient.</strong>\r\n\r\n        •  At Saviynt, I pitched an idea I had to create in-house automations that would save 48min-1.2h/day for over 600 employees. The CEO approved of the POC, single coolest moment of my corporate life.\r\n        •  At Honeywell, I helped create the internal testing website to improve efficiency within the team. I also replaced the background with the Elmo on fire meme for a day, thereby making history in Pittsburgh's Honeywell office as the \"Elmo intern\". Shoutout to Maegan, Debby and the team! \r\n        •  In conclusion, what's productivity without a lil humor?\r\n        \r\n\r\n        <strong>#3 Great things are never done by one person.</strong>\r\n\r\n        •  Having led a team of 8 people at my startup, I learnt the fundamentals of leadership.\r\n        •  No matter how good one may be, we are nothing without our team.`,\r\n        \"What are her hobbies?\": `   Apart from coding the most random ideas at 3am I also enjoy:\r\n\r\n•  cooking (especially Thai food)\r\n\r\n•  painting, bowling, top golf \r\n\r\n•  volunteering at the animal shelter (let me know if you'd be interested as well!)\r\n\r\n•  examining car engines (especially v8 sport cars)\r\n\r\n•  rooting for Ferrari in Formula 1 races\r\n\r\n•  always trying to find problems that I could turn into the next million $ idea!`,\r\n        \"What is she like outside work?\": `   <strong>\"The key to success is happiness\"</strong>\r\n\r\nI make sure to take time to do things that keep me mentally calm and refreshed. This includes giving enough time to develop the ideas that I am passionate about, spending time with friends and family, taking a break to pet a cute dog, and doing spontaneous things with my friends!`,\r\n        \"I'm bored and I want to play a game\": ` Sure! Here's a few games you can play:\r\n        \r\n         •  <a href=\"https://www.chess.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Chess</a>\r\n         •  <a href=\"https://www.rockstargames.com/gta-v\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">GTA V</a> (we got Sam's AI version before GTA VI)\r\n         •  <a href=\"https://www.google.com/logos/2010/pacman10-i.html\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Pac-Man</a> (the OG) \r\n         •  <a href=\"http://slither.com/io\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Slither.io</a> (extremely addictive) \r\n         •  <a href=\"https://www.callofduty.com/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Call of Duty</a> (extremely addictive)\r\n         •  <a href=\"https://www.king.com/game/candycrush\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Candy Crush</a> (shoutout to my mom!)    `  \r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Links = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   Thank you for visiting my website! I'd love to connect with you on:\r\n\r\n        LinkedIn: <a href=\"https://www.linkedin.com/in/samika-sanghvi/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Samika Sanghvi</a>\r\n        Email: sps76@pitt.edu\r\n        Phone: +1 412-651-2512\r\n\r\n        Talk to you soon!\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n    ]);\r\n\r\n    const responses = {\r\n        \"WICS\": `  <strong>Vice-President, Women in Computer Science (WICS), Pittsburgh, PA    2023-2024 </strong>\r\n\r\n• Introduced fortune 100 sponsors and technical workshops for underrepresented student communities.`,\r\n        \"Lothrop Hall\": `<strong> President, Lothrop Hall Council, Pittsburgh, PA    2022-2023 </strong>\r\n        \r\n        • Lead a council of students and resident assistants to organize bi-weekly events for over 600 student residents.`,\r\n        \"FSAE Panther Racing\": `   <strong>Club Member, Pitt FSAE Panther Racing, Pittsburgh, PA   2022-present </strong>\r\n• Converted sensory signals to assembly language using ROS and Arduino to program a life-size intended F1 car.\r\n• Completed coursework on ROS, Linux, and Optimization Theory to get the vehicle ready for competition.`,\r\n        \"SheInnovates\": `Developed an application for OCD therapy with integrated sensors using HTML, Python, and Figma! `,\r\n        \"f it we ball\": \"    bet, try putting on escape from LA and lmk what you think\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Links;\r\n","import React, { useState, useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\nimport QuestionAnswer from './QuestionAnswer';\r\nimport './MainContent.css';\r\n\r\nconst Intro = () => {\r\n    const [chatHistory, setChatHistory] = useState([]); // State to store chat history\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [activeQuestion, setActiveQuestion] = useState('');\r\n\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        setShowOptions(true); // Show options after initial message\r\n    }, []);\r\n\r\n    const initialMessage = useTypewriter(\r\n        `   Hi! Thanks for visiting and welcome to SamsGPT 1.0 :)\r\n\r\n        My name is Samika Sanghvi and I'm working on creating an AI version of myself. Since the model is still under development, I thought it would be a fun idea to create a GPT emulation of it before I officially release it on the website!\r\n        This is a static website where you can explore different parts of my resume from the navigation bar to your left. \r\n\r\n        Since you're here, I'd love your thoughts/feedback on the current UI. If you'd like to connect with me:\r\n        LinkedIn: <a href=\"https://www.linkedin.com/in/samika-sanghvi/\" target=\"_blank\" style=\"text-decoration: underline; color: inherit;\">Samika Sanghvi</a>\r\n        Email: sps76@pitt.edu\r\n\r\n        Feel free to explore and have fun with the current design!\r\n`,\r\n        handleTypewriterComplete\r\n    );\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleScrollToBottom = () => {\r\n        window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\r\n    };\r\n\r\n    const [currentResponse, setCurrentResponse] = useState('');\r\n    \r\n    const handleButtonClick = (option) => {\r\n        const answer = responses[option];\r\n        setActiveQuestion(option);\r\n        setChatHistory(prevHistory => [...prevHistory, { question: option, answer }]);\r\n        setRemainingOptions(prevOptions => prevOptions.filter(opt => opt !== option)); // Filter out the clicked option\r\n        setShowOptions(false); // Hide options during answering\r\n        setIsAnswering(true); // Set answering state\r\n        setCurrentResponse(answer);\r\n              // Simulate a delay to allow the answer to \"type out\" before showing options again\r\n              setTimeout(() => {\r\n                setIsAnswering(false); // Answering done\r\n                handleTypewriterComplete(); // Show options again\r\n            }, answer.length * 5); // Adjust the timing based on answer length (simulated typing time)\r\n        \r\n    };\r\n\r\n    const [remainingOptions, setRemainingOptions] = useState([\r\n    ]);\r\n\r\n    const responses = {\r\n        \"WICS\": `  <strong>Vice-President, Women in Computer Science (WICS), Pittsburgh, PA    2023-2024 </strong>\r\n\r\n• Introduced fortune 100 sponsors and technical workshops for underrepresented student communities.`,\r\n        \"Lothrop Hall\": `<strong> President, Lothrop Hall Council, Pittsburgh, PA    2022-2023 </strong>\r\n        \r\n        • Lead a council of students and resident assistants to organize bi-weekly events for over 600 student residents.`,\r\n        \"FSAE Panther Racing\": `   <strong>Club Member, Pitt FSAE Panther Racing, Pittsburgh, PA   2022-present </strong>\r\n• Converted sensory signals to assembly language using ROS and Arduino to program a life-size intended F1 car.\r\n• Completed coursework on ROS, Linux, and Optimization Theory to get the vehicle ready for competition.`,\r\n        \"SheInnovates\": `Developed an application for OCD therapy with integrated sensors using HTML, Python, and Figma! `,\r\n        \"f it we ball\": \"    bet, try putting on escape from LA and lmk what you think\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            <div className=\"main-content\">\r\n                <div className=\"chat-header\">\r\n                    <span>Sam's GPT</span>\r\n                </div>\r\n                <div className=\"chat-messages\">\r\n                    <div className=\"message\">\r\n                        <CustomImage />\r\n                        <div className=\"message-content\">\r\n                            <p dangerouslySetInnerHTML={{ __html: initialMessage.replace(/\\n/g, '<br />') }}></p>\r\n                        </div>\r\n                    </div>\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index} className=\"chat-entry\">\r\n                            <div className=\"question-container\">\r\n                                <div style={styles.Button} className=\"question-style\">{chat.question}</div>\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" />\r\n                            </div>\r\n                            <QuestionAnswer question={chat.question} answer={chat.answer} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"options-with-image\">\r\n                {showOptions && (\r\n                <div className=\"options-container\">\r\n                    {remainingOptions.map((option, index) => (\r\n                        <div key={index} className=\"option-item\">\r\n                            <Button\r\n                                label={option}\r\n                                onClick={() => handleButtonClick(option)}\r\n                                isSelected={false}\r\n                            />\r\n                            {index === remainingOptions.length - 1 && (\r\n                                <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"option-icon\" />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer',\r\n        width: '288px',\r\n        height: '44px',\r\n        padding: '0px 8px',\r\n        border: '0',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '22px',\r\n        backgroundColor: '#2f2f2f',\r\n        color: '#ececec',\r\n        fontSize: '13px',\r\n        fontFamily: 'Roboto',\r\n        lineHeight: '18px',\r\n        outline: 'none',\r\n        margin: '5px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444',\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar';\r\nimport MainContent from './components/MainContent';\r\nimport Education from './components/Education';\r\nimport Skills from './components/Skills';\r\nimport WorkExperience from './components/WorkExperience';\r\nimport Entrepreneurship from './components/Entre';\r\nimport ExtraCurriculars from './components/ExtraCurriculars';\r\nimport Projects from './components/Projects';\r\nimport Links from './components/Links';\r\nimport Intro from './components/intro';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Sidebar />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Intro />} /> {/* Default route */}\r\n          <Route path=\"/intro\" element={<Intro />} />\r\n          <Route path=\"/profile\" element={<MainContent />} />\r\n          <Route path=\"/education\" element={<Education />} />\r\n          <Route path=\"/skills\" element={<Skills />} />\r\n          <Route path=\"/work-experience\" element={<WorkExperience />} />\r\n          <Route path=\"/entrepreneurship\" element={<Entrepreneurship />} />\r\n          <Route path=\"/extra-curriculars\" element={<ExtraCurriculars />} />\r\n          <Route path=\"/projects\" element={<Projects />} />\r\n          <Route path=\"/links\" element={<Links />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}