{"version":3,"sources":["components/Card.js","components/CustomImage.js","components/TopIcons.js","components/ProfileButton.js","components/Sidebar.js","hooks/Typewriter.js","components/QuestionAnswer.js","components/MainContent.js","App.js","index.js"],"names":["styles","Card","top","left","width","height","backgroundColor","borderRadius","display","flexDirection","padding","boxSizing","props","_jsx","style","children","backgroundPosition","backgroundSize","backgroundRepeat","defaultProps","CustomImage","_props$image","backgroundImage","concat","image","iconContainer","justifyContent","imageContainer","cursor","icons","id","url","TopIcons","_ref","onToggleCollapse","map","icon","index","onClick","fontSize","fontFamily","lineHeight","fontWeight","marginBottom","color","ProfileButton","text","active","buttonStyle","Sidebar","collapsed","setCollapsed","useState","activeSection","setActiveSection","_jsxs","className","handleToggle","marginTop","alignItems","marginLeft","margin","useTypewriter","onComplete","displayedText","setDisplayedText","useEffect","currentIndex","intervalId","setInterval","length","prev","clearInterval","QuestionAnswer","question","answer","handleTypewriterComplete","useCallback","answerText","border","outline","Button","isSelected","label","MainContent","showOptions","setShowOptions","selectedOptionIndex","setSelectedOptionIndex","setQuestion","setAnswer","isAnswering","setIsAnswering","initialMessage","getAnswerForQuestion","options","option","selectedOption","handleButtonClick","src","alt","App","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.ed382f58.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst styles = {\r\n  Card: {\r\n    top: '0px',\r\n    left: '0px',\r\n    width: '237px',\r\n    height: '100vh',\r\n    backgroundColor: '#171717',\r\n    borderRadius: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n  },\r\n};\r\n\r\nconst Card = (props) => {\r\n  return <div style={styles.Card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  ImageContainer: {\r\n    width: '55px',\r\n    height: '55px',\r\n    borderRadius: '9999px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n};\r\n\r\nconst defaultProps = {\r\n  image: 'https://assets.api.uizard.io/api/cdn/stream/e2ffbe9b-2685-41ae-9a7e-73844efcce87.png',\r\n};\r\n\r\nconst CustomImage = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.ImageContainer,\r\n        backgroundImage: `url(${props.image ?? defaultProps.image})`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomImage;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  iconContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '20px',\r\n  },\r\n  imageContainer: {\r\n    width: '24px',\r\n    height: '24px',\r\n    backgroundPosition: 'center center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst icons = [\r\n  { id: 1, url: 'https://assets.api.uizard.io/api/cdn/stream/d623031a-d918-41d4-9fb3-2ac91c3d5ac0.png' },\r\n  { id: 2, url: 'https://assets.api.uizard.io/api/cdn/stream/82b4f557-56b8-48fc-98b5-8cffef11197b.png' },\r\n];\r\n\r\nconst TopIcons = ({ onToggleCollapse }) => {\r\n  return (\r\n    <div style={styles.iconContainer}>\r\n      {icons.map((icon, index) => (\r\n        <div\r\n          key={icon.id}\r\n          style={{\r\n            ...styles.imageContainer,\r\n            backgroundImage: `url(${icon.url})`,\r\n          }}\r\n          onClick={index === 0 ? onToggleCollapse : null}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopIcons;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  button: {\r\n    fontSize: '20px',\r\n    fontFamily: 'Roboto, sans-serif',\r\n    lineHeight: '26px',\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    fontWeight: 400, // Regular font weight\r\n    marginBottom: '10px', // Add margin for spacing\r\n  },\r\n  activeButton: {\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#000000',\r\n    borderRadius: '5px',\r\n  },\r\n  inactiveButton: {\r\n    backgroundColor: 'transparent',\r\n    color: '#FFFFFF',\r\n  },\r\n};\r\n\r\nconst ProfileButton = ({ text = 'Profile', active = false }) => {\r\n  const buttonStyle = active\r\n    ? { ...styles.button, ...styles.activeButton }\r\n    : { ...styles.button, ...styles.inactiveButton };\r\n\r\n  return (\r\n    <div style={buttonStyle}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileButton;\r\n","import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport CustomImage from './CustomImage';\r\nimport TopIcons from './TopIcons';\r\nimport ProfileButton from './ProfileButton';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [activeSection, setActiveSection] = useState('Profile');\r\n\r\n  const handleToggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  return (\r\n    <Card className={`sidebar ${collapsed ? 'collapsed' : ''}`}>\r\n      <TopIcons onToggleCollapse={handleToggle} />\r\n      <div style={{ marginTop: '20px', marginBottom: '30px' }}>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <CustomImage />\r\n          {!collapsed && <span style={{ marginLeft: '10px', color: '#ffffff' }}>Sam's GPT</span>}\r\n        </div>\r\n      </div>\r\n      <ProfileButton text=\"Profile\" active={activeSection === 'Profile'} onClick={() => setActiveSection('Profile')} />\r\n      <div style={{ marginTop: '20px', color: '#b4b4b4' }}>\r\n        {!collapsed && <span>Previous Conversations</span>}\r\n      </div>\r\n      <div style={{ backgroundColor: '#ffffff', height: '2px', width: '100%', margin: '10px 0' }}></div>\r\n      <ProfileButton text=\"Education\" active={activeSection === 'Education'} onClick={() => setActiveSection('Education')} />\r\n      <ProfileButton text=\"Skills\" active={activeSection === 'Skills'} onClick={() => setActiveSection('Skills')} />\r\n      <ProfileButton text=\"Work Experience\" active={activeSection === 'Work Experience'} onClick={() => setActiveSection('Work Experience')} />\r\n      <ProfileButton text=\"Entrepreneurship\" active={activeSection === 'Entrepreneurship'} onClick={() => setActiveSection('Entrepreneurship')} />\r\n      <ProfileButton text=\"Extra Curriculars\" active={activeSection === 'Extra Curriculars'} onClick={() => setActiveSection('Extra Curriculars')} />\r\n      <ProfileButton text=\"Projects\" active={activeSection === 'Projects'} onClick={() => setActiveSection('Projects')} />\r\n      <ProfileButton text=\"Links\" active={activeSection === 'Links'} onClick={() => setActiveSection('Links')} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useTypewriter = (text, onComplete) => {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let currentIndex = 1;\r\n        const intervalId = setInterval(() => {\r\n            if (currentIndex < text.length-1) {\r\n                setDisplayedText((prev) => prev + text[currentIndex]);\r\n                currentIndex++;\r\n            } else {\r\n                clearInterval(intervalId);\r\n                if (onComplete) onComplete();\r\n            }\r\n        }, 10);\r\n        return () => clearInterval(intervalId);\r\n    }, [text, onComplete]);\r\n\r\n    return displayedText;\r\n};\r\n\r\nexport default useTypewriter;\r\n","import React, { useCallback } from 'react';\r\nimport CustomImage from './CustomImage';\r\nimport useTypewriter from '../hooks/Typewriter';\r\n\r\n// In QuestionAnswer.js\r\nconst QuestionAnswer = ({ question, answer, onComplete }) => {\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        if (onComplete) onComplete(); // Call the onComplete function if provided\r\n    }, [onComplete]);\r\n\r\n    const answerText = useTypewriter(answer, handleTypewriterComplete);\r\n\r\n    return (\r\n        <div className=\"message\">\r\n            <CustomImage />\r\n            <div className=\"message-content\">\r\n                <p>{answerText}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionAnswer;\r\n","// Importing necessary React hooks and components\r\nimport React, { useState, useCallback } from 'react'; // Import useState and useCallback hooks from React\r\nimport CustomImage from './CustomImage'; // Import CustomImage component\r\nimport useTypewriter from '../hooks/Typewriter'; // Import custom hook for typewriter effect\r\nimport QuestionAnswer from './QuestionAnswer'; // Import QuestionAnswer component\r\nimport './MainContent.css'; // Import CSS file for styling\r\n\r\n// Define the MainContent component\r\nconst MainContent = () => {\r\n    // Define state variables\r\n    const [showOptions, setShowOptions] = useState(false); // State to show/hide options\r\n    const [selectedOptionIndex, setSelectedOptionIndex] = useState(null); // State to track selected option index\r\n    const [question, setQuestion] = useState(''); // State to store the current question\r\n    const [answer, setAnswer] = useState(''); // State to store the current answer\r\n    const [isAnswering, setIsAnswering] = useState(false); // State to indicate if answering is in progress\r\n\r\n    // Callback function to handle completion of typewriter effect\r\n    const handleTypewriterComplete = useCallback(() => {\r\n        if (!isAnswering) {\r\n            setShowOptions(true); // Show options if not answering\r\n        } else {\r\n            setIsAnswering(false); // Reset answering state\r\n            setShowOptions(true); // Show options\r\n        }\r\n    }, [isAnswering]); // Dependency array includes isAnswering\r\n\r\n    // Use the custom typewriter hook to generate the initial message\r\n    const initialMessage = useTypewriter(\r\n        \"   Hi! Thanks for stopping by :) I'm Sam's GPT trained on her resume. When you're ready, navigate to different chats on the sidebar to get to know her. To begin, select an option from the following to know more about her profile!\",\r\n        handleTypewriterComplete // Callback to run when typewriter effect completes\r\n    );\r\n\r\n    // Handle button click event\r\n    const handleButtonClick = (index) => {\r\n        const selectedOption = options[index]; // Get the selected option\r\n        setSelectedOptionIndex(index); // Set the selected option index\r\n        setQuestion(selectedOption.label); // Set the question based on the selected option\r\n        setAnswer(getAnswerForQuestion(selectedOption.label)); // Set the answer based on the question\r\n    };\r\n\r\n    // Function to get the answer for a given question\r\n    const getAnswerForQuestion = (question) => {\r\n        switch(question) { // Switch statement to determine answer based on question\r\n            case \"Give me a quick introduction to Samika\":\r\n                return \"   Samika is a software engineer with 5 years of experience in full-stack development...\";\r\n            case \"What's it like to work with Samika?\":\r\n                return \"Working with Samika is a collaborative and enriching experience. She is known for her problem-solving skills...\";\r\n            case \"What is she like outside work?\":\r\n                return \"Outside of work, Samika enjoys hiking, painting, and volunteering at local animal shelters...\";\r\n            case \"I'm bored and I want to play a game\":\r\n                return \"Let's play a fun word game! Think of a word, and I'll try to guess it...\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    };\r\n\r\n    // Array of option objects with labels\r\n    const options = [\r\n        { label: \"Give me a quick introduction to Samika\" },\r\n        { label: \"What's it like to work with Samika?\" },\r\n        { label: \"What is she like outside work?\" },\r\n        { label: \"I'm bored and I want to play a game\" },\r\n    ];\r\n\r\n    // Handle completion of the answer\r\n    const handleAnswerComplete = () => {\r\n        setSelectedOptionIndex(null); // Reset selectedOptionIndex\r\n        setShowOptions(true); // Show options again\r\n    };\r\n\r\n    // Return the JSX to render the component\r\n    return (\r\n        <div className=\"main-content\"> {/* Main content container */}\r\n            <div className=\"chat-header\"> {/* Chat header */}\r\n                <span>Sam's GPT</span> {/* Header text */}\r\n            </div>\r\n            <div className=\"chat-messages\"> {/* Chat messages container */}\r\n                <div className=\"message\"> {/* Message container */}\r\n                    <CustomImage /> {/* Custom image component */}\r\n                    <div className=\"message-content\"> {/* Message content */}\r\n                        <p>{initialMessage}</p> {/* Display initial message */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"options-with-image\"> {/* Options container with image */}\r\n                {showOptions && ( /* Conditional rendering of options */\r\n                    <div className=\"options-container\"> {/* Options container */}\r\n                        {options.map((option, index) => ( /* Map over options to create buttons */\r\n                            selectedOptionIndex === null || selectedOptionIndex === index ? ( /* Conditional rendering of selected option */\r\n                                <Button\r\n                                    key={index} // Unique key for each button\r\n                                    label={option.label} // Button label\r\n                                    onClick={() => handleButtonClick(index)} // Button click handler\r\n                                    isSelected={selectedOptionIndex === index} // Is the button selected\r\n                                />\r\n                            ) : null\r\n                        ))}\r\n                        <img src=\"https://assets.api.uizard.io/api/cdn/stream/347c912a-0054-4a72-a32b-5e8b9d5af74d.png\" alt=\"icon\" className=\"side-icon\" /> {/* Side icon */}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {selectedOptionIndex !== null && ( /* Conditional rendering of answer */\r\n                <div className=\"chat-messages\"> {/* Chat messages container */}\r\n                    <QuestionAnswer question={question} answer={answer} /> {/* Question and answer component */}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Styles for the Button component\r\nconst styles = {\r\n    Button: {\r\n        cursor: 'pointer', // Pointer cursor on hover\r\n        width: '288px', // Button width\r\n        height: '44px', // Button height\r\n        padding: '0px 8px', // Button padding\r\n        border: '0', // No border\r\n        boxSizing: 'border-box', // Border-box sizing\r\n        borderRadius: '22px', // Rounded corners\r\n        backgroundColor: '#2f2f2f', // Background color\r\n        color: '#ececec', // Text color\r\n        fontSize: '13px', // Font size\r\n        fontFamily: 'Roboto', // Font family\r\n        lineHeight: '18px', // Line height\r\n        outline: 'none', // No outline\r\n        margin: '5px 0', // Margin\r\n        display: 'flex', // Flexbox layout\r\n        alignItems: 'center', // Align items center\r\n        justifyContent: 'center', // Justify content center\r\n    },\r\n    SelectedButton: {\r\n        backgroundColor: '#444', // Background color for selected button\r\n    },\r\n};\r\n\r\n// Button component\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            style={{ ...styles.Button, ...(props.isSelected ? styles.SelectedButton : {}) }} // Apply styles and selected state styles\r\n            onClick={props.onClick} // Click handler\r\n        >\r\n            {props.label} {/* Button label */}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MainContent; // Export MainContent component as default\r\n","import React from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport MainContent from './components/MainContent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar />\r\n      <MainContent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}